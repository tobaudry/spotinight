{"ast":null,"code":"import axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nconst clientId = \"3cde5ab5546a42d0a7d271199a4f2a70\"; // clientId\nconst redirectUrl = \"http://localhost:3000\"; // redirect URL \nconst authorizationEndpoint = \"https://accounts.spotify.com/authorize\";\nconst tokenEndpoint = \"https://accounts.spotify.com/api/token\";\nconst scope = \"user-read-private user-read-email user-top-read playlist-modify-public\";\nconst currentToken = {\n  get access_token() {\n    return localStorage.getItem(\"access_token\") || null;\n  },\n  get refresh_token() {\n    return localStorage.getItem(\"refresh_token\") || null;\n  },\n  get expires_in() {\n    return localStorage.getItem(\"refresh_in\") || null;\n  },\n  get expires() {\n    return localStorage.getItem(\"expires\") || null;\n  },\n  save: function (response) {\n    const {\n      access_token,\n      refresh_token,\n      expires_in\n    } = response;\n    localStorage.setItem(\"access_token\", access_token);\n    localStorage.setItem(\"refresh_token\", refresh_token);\n    localStorage.setItem(\"expires_in\", expires_in);\n    const now = new Date();\n    const expiry = new Date(now.getTime() + expires_in * 1000);\n    localStorage.setItem(\"expires\", expiry);\n  }\n};\nconst args = new URLSearchParams(window.location.search);\nconst code = args.get(\"code\");\nif (code) {\n  const token = await getToken(code);\n  currentToken.save(token);\n  const url = new URL(window.location.href);\n  url.searchParams.delete(\"code\");\n  const updatedUrl = url.search ? url.href : url.href.replace(\"?\", \"\");\n  window.history.replaceState({}, document.title, updatedUrl);\n}\nasync function redirectToSpotifyAuthorize() {\n  const possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  const randomValues = crypto.getRandomValues(new Uint8Array(64));\n  const randomString = randomValues.reduce((acc, x) => acc + possible[x % possible.length], \"\");\n  const code_verifier = randomString;\n  const data = new TextEncoder().encode(code_verifier);\n  const hashed = await crypto.subtle.digest(\"SHA-256\", data);\n  const code_challenge_base64 = btoa(String.fromCharCode(...new Uint8Array(hashed))).replace(/=/g, \"\").replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\n  window.localStorage.setItem(\"code_verifier\", code_verifier);\n  const authUrl = new URL(authorizationEndpoint);\n  const params = {\n    response_type: \"code\",\n    client_id: clientId,\n    scope: scope,\n    code_challenge_method: \"S256\",\n    code_challenge: code_challenge_base64,\n    redirect_uri: redirectUrl\n  };\n  authUrl.search = new URLSearchParams(params).toString();\n  window.location.href = authUrl.toString();\n}\nexport const searchTracks = async (searchTerm, accessToken) => {\n  const baseURL = 'https://api.spotify.com/v1/search';\n  const query = `?q=${encodeURIComponent(searchTerm)}&type=track&limit=10`;\n  try {\n    const response = await fetch(`${baseURL}${query}`, {\n      method: 'GET',\n      headers: {\n        'Authorization': `Bearer ${accessToken}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      throw new Error(`Error: ${response.status}`);\n    }\n    const data = await response.json();\n    return data.tracks.items;\n  } catch (error) {\n    console.error('Error during track search', error);\n    throw error;\n  }\n};\n\n// Soptify API \nasync function getToken(code) {\n  const code_verifier = localStorage.getItem(\"code_verifier\");\n  const response = await fetch(tokenEndpoint, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\"\n    },\n    body: new URLSearchParams({\n      client_id: clientId,\n      grant_type: \"authorization_code\",\n      code: code,\n      redirect_uri: redirectUrl,\n      code_verifier: code_verifier\n    })\n  });\n  return await response.json();\n}\nasync function refreshToken() {\n  const response = await fetch(tokenEndpoint, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\"\n    },\n    body: new URLSearchParams({\n      client_id: clientId,\n      grant_type: \"refresh_token\",\n      refresh_token: currentToken.refresh_token\n    })\n  });\n  return await response.json();\n}\n\n// Login and logout\n\nexport async function loginSpotify() {\n  await redirectToSpotifyAuthorize();\n}\nexport async function logoutSpotify() {\n  localStorage.clear();\n  window.location.href = redirectUrl;\n}\nexport async function refreshSpotify() {\n  const token = await refreshToken();\n  currentToken.save(token);\n}\nexport function isLogged() {\n  return currentToken.access_token != null;\n}\n\n// Fetch functions\n\nasync function fetchWebApi(endpoint, method, body) {\n  const response = await fetch(`https://api.spotify.com/${endpoint}`, {\n    headers: {\n      Authorization: `Bearer ${currentToken.access_token}`\n    },\n    method,\n    body: JSON.stringify(body)\n  });\n  return await response.json();\n}\nexport async function getUserData() {\n  return await fetchWebApi(\"v1/me\", \"GET\");\n}\nexport async function getNewReleases() {\n  return await fetchWebApi(\"v1/browse/new-releases?limit=5\", \"GET\");\n}\nexport async function getPlaylistTracks(playlistId) {\n  return await fetchWebApi(`v1/playlists/${playlistId}/tracks?limit=100`, \"GET\");\n}\n\n// top sons\nexport async function getTopTracks() {\n  return await fetchWebApi(\"v1/me/top/tracks?limit=5\", \"GET\");\n}\nexport async function getGlobalTopTracks() {\n  const playlistId = \"37i9dQZEVXbMDoHDwVN2tF\"; // Par exemple, ID pour la playlist Global Top 50 de Spotify\n  return await fetchWebApi(`v1/playlists/${playlistId}/tracks?limit=50`, \"GET\");\n}\nexport async function getTrackInfo(trackId) {\n  try {\n    const trackInfo = await fetchWebApi(`v1/tracks/${trackId}`, \"GET\");\n    return trackInfo;\n  } catch (error) {\n    console.error(\"Erreur lors de la récupération des informations de la piste :\", error);\n    throw error;\n  }\n}\nexport { currentToken };","map":{"version":3,"names":["axios","useState","useEffect","clientId","redirectUrl","authorizationEndpoint","tokenEndpoint","scope","currentToken","access_token","localStorage","getItem","refresh_token","expires_in","expires","save","response","setItem","now","Date","expiry","getTime","args","URLSearchParams","window","location","search","code","get","token","getToken","url","URL","href","searchParams","delete","updatedUrl","replace","history","replaceState","document","title","redirectToSpotifyAuthorize","possible","randomValues","crypto","getRandomValues","Uint8Array","randomString","reduce","acc","x","length","code_verifier","data","TextEncoder","encode","hashed","subtle","digest","code_challenge_base64","btoa","String","fromCharCode","authUrl","params","response_type","client_id","code_challenge_method","code_challenge","redirect_uri","toString","searchTracks","searchTerm","accessToken","baseURL","query","encodeURIComponent","fetch","method","headers","ok","Error","status","json","tracks","items","error","console","body","grant_type","refreshToken","loginSpotify","logoutSpotify","clear","refreshSpotify","isLogged","fetchWebApi","endpoint","Authorization","JSON","stringify","getUserData","getNewReleases","getPlaylistTracks","playlistId","getTopTracks","getGlobalTopTracks","getTrackInfo","trackId","trackInfo"],"sources":["/Users/tomtom/Desktop/projet-2024-bayol_baudry_armengaud/src/Spotify.js"],"sourcesContent":["import axios from \"axios\";\nimport { useState, useEffect } from \"react\";\n\nconst clientId = \"3cde5ab5546a42d0a7d271199a4f2a70\"; // clientId\nconst redirectUrl = \"http://localhost:3000\"; // redirect URL \nconst authorizationEndpoint = \"https://accounts.spotify.com/authorize\";\nconst tokenEndpoint = \"https://accounts.spotify.com/api/token\";\nconst scope = \"user-read-private user-read-email user-top-read playlist-modify-public\";\n\n\nconst currentToken = {\n  get access_token() {\n    return localStorage.getItem(\"access_token\") || null;\n  },\n  get refresh_token() {\n    return localStorage.getItem(\"refresh_token\") || null;\n  },\n  get expires_in() {\n    return localStorage.getItem(\"refresh_in\") || null;\n  },\n  get expires() {\n    return localStorage.getItem(\"expires\") || null;\n  },\n\n  save: function (response) {\n    const { access_token, refresh_token, expires_in } = response;\n    localStorage.setItem(\"access_token\", access_token);\n    localStorage.setItem(\"refresh_token\", refresh_token);\n    localStorage.setItem(\"expires_in\", expires_in);\n\n    const now = new Date();\n    const expiry = new Date(now.getTime() + expires_in * 1000);\n    localStorage.setItem(\"expires\", expiry);\n  },\n};\n\n\nconst args = new URLSearchParams(window.location.search);\nconst code = args.get(\"code\");\n\n\nif (code) {\n  const token = await getToken(code);\n  currentToken.save(token);\n\n  \n  const url = new URL(window.location.href);\n  url.searchParams.delete(\"code\");\n  const updatedUrl = url.search ? url.href : url.href.replace(\"?\", \"\");\n  window.history.replaceState({}, document.title, updatedUrl);\n}\n\nasync function redirectToSpotifyAuthorize() {\n  const possible =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  const randomValues = crypto.getRandomValues(new Uint8Array(64));\n  const randomString = randomValues.reduce(\n    (acc, x) => acc + possible[x % possible.length],\n    \"\"\n  );\n\n  const code_verifier = randomString;\n  const data = new TextEncoder().encode(code_verifier);\n  const hashed = await crypto.subtle.digest(\"SHA-256\", data);\n\n  const code_challenge_base64 = btoa(\n    String.fromCharCode(...new Uint8Array(hashed))\n  )\n    .replace(/=/g, \"\")\n    .replace(/\\+/g, \"-\")\n    .replace(/\\//g, \"_\");\n\n  window.localStorage.setItem(\"code_verifier\", code_verifier);\n\n  const authUrl = new URL(authorizationEndpoint);\n  const params = {\n    response_type: \"code\",\n    client_id: clientId,\n    scope: scope,\n    code_challenge_method: \"S256\",\n    code_challenge: code_challenge_base64,\n    redirect_uri: redirectUrl,\n  };\n\n  authUrl.search = new URLSearchParams(params).toString();\n  window.location.href = authUrl.toString(); \n}\n\nexport const searchTracks = async (searchTerm, accessToken) => {\n  const baseURL = 'https://api.spotify.com/v1/search';\n  const query = `?q=${encodeURIComponent(searchTerm)}&type=track&limit=10`;\n\n  try {\n    const response = await fetch(`${baseURL}${query}`, {\n      method: 'GET',\n      headers: {\n        'Authorization': `Bearer ${accessToken}`,\n        'Content-Type': 'application/json'\n      }\n    });\n\n    if (!response.ok) {\n      throw new Error(`Error: ${response.status}`);\n    }\n\n    const data = await response.json();\n    return data.tracks.items; \n  } catch (error) {\n    console.error('Error during track search', error);\n    throw error; \n  }\n};\n\n\n// Soptify API \nasync function getToken(code) {\n  const code_verifier = localStorage.getItem(\"code_verifier\");\n\n  const response = await fetch(tokenEndpoint, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n    },\n    body: new URLSearchParams({\n      client_id: clientId,\n      grant_type: \"authorization_code\",\n      code: code,\n      redirect_uri: redirectUrl,\n      code_verifier: code_verifier,\n    }),\n  });\n\n  return await response.json();\n}\n\nasync function refreshToken() {\n  const response = await fetch(tokenEndpoint, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n    },\n    body: new URLSearchParams({\n      client_id: clientId,\n      grant_type: \"refresh_token\",\n      refresh_token: currentToken.refresh_token,\n    }),\n  });\n\n  return await response.json();\n}\n\n// Login and logout\n\nexport async function loginSpotify() {\n  await redirectToSpotifyAuthorize();\n}\n\nexport async function logoutSpotify() {\n  localStorage.clear();\n  window.location.href = redirectUrl;\n}\n\nexport async function refreshSpotify() {\n  const token = await refreshToken();\n  currentToken.save(token);\n}\n\nexport function isLogged() {\n  return currentToken.access_token != null;\n}\n\n// Fetch functions\n\nasync function fetchWebApi(endpoint, method, body) {\n  const response = await fetch(`https://api.spotify.com/${endpoint}`, {\n    headers: {\n      Authorization: `Bearer ${currentToken.access_token}`,\n    },\n    method,\n    body: JSON.stringify(body),\n  });\n  return await response.json();\n}\n\nexport async function getUserData() {\n  return await fetchWebApi(\"v1/me\", \"GET\");\n}\n\nexport async function getNewReleases() {\n  return await fetchWebApi(\"v1/browse/new-releases?limit=5\", \"GET\");\n}\n\nexport async function getPlaylistTracks(playlistId) {\n  return await fetchWebApi(\n    `v1/playlists/${playlistId}/tracks?limit=100`,\n    \"GET\"\n  );\n}\n\n\n// top sons\nexport async function getTopTracks() {\n  return await fetchWebApi(\"v1/me/top/tracks?limit=5\", \"GET\");\n}\n\nexport async function getGlobalTopTracks() {\n  const playlistId = \"37i9dQZEVXbMDoHDwVN2tF\"; // Par exemple, ID pour la playlist Global Top 50 de Spotify\n  return await fetchWebApi(`v1/playlists/${playlistId}/tracks?limit=50`, \"GET\");\n}\n\nexport async function getTrackInfo(trackId) {\n\n  try {\n    const trackInfo = await fetchWebApi(`v1/tracks/${trackId}`, \"GET\");\n    return trackInfo;\n  } catch (error) {\n    console.error(\n      \"Erreur lors de la récupération des informations de la piste :\",\n      error\n    );\n    throw error; \n  }\n}\n\nexport { currentToken };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}