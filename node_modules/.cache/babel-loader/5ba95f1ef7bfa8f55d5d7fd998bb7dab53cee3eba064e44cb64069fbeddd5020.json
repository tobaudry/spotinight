{"ast":null,"code":"var _jsxFileName = \"/Users/tomtom/Desktop/spotinight/src/Pages/Event.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getUserData, isLogged } from \"../Spotify\";\nimport { database } from \"../firebase-config\";\nimport { ref, get, set } from \"firebase/database\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport ArrowBackIosNewIcon from \"@mui/icons-material/ArrowBackIosNew\";\nimport Swipe from \"./Swipe\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Event() {\n  _s();\n  var _eventData$creator$us;\n  const navigate = useNavigate();\n  const {\n    eventId\n  } = useParams();\n  const [user, setUser] = useState(null);\n  const [showPopup, setShowPopup] = useState(false);\n  const [eventData, setEventData] = useState(null);\n  const [countdown, setCountdown] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [days] = useState(0);\n  const [playlistCreated, setPlaylistCreated] = useState(false);\n  const [playlistUrl, setPlaylistUrl] = useState(\"\");\n  useEffect(() => {\n    const fetchData = async () => {\n      const loggedIn = isLogged();\n      if (!loggedIn) {\n        navigate(\"/\");\n      } else {\n        const userData = await getUserData();\n        setUser(userData);\n        if (userData) {\n          // Move checkEventParticipation inside the useEffect callback\n          const checkEventParticipation = async userId => {\n            try {\n              const userRef = ref(database, `events/${eventId}/users/${userId}`);\n              const userSnapshot = await get(userRef);\n              if (userSnapshot.exists()) {} else {\n                setShowPopup(true);\n              }\n            } catch (error) {\n              console.error(\"Erreur :\", error);\n            }\n          };\n          checkEventParticipation(userData.id);\n        }\n        await fetchEventData(eventId);\n      }\n    };\n    fetchData();\n  }, [navigate, eventId]); // Remove checkEventParticipation from dependencies\n\n  useEffect(() => {\n    if (eventData) {\n      const eventDateTime = new Date(`${eventData.date}T${eventData.time}`);\n      const now = new Date();\n      console.log(eventDateTime);\n      console.log(now);\n      if (eventDateTime > now) {\n        console.log(\"je suis dedans\");\n        const intervalId = setInterval(() => {\n          const now = new Date();\n          const timeRemaining = eventDateTime.getTime() - now.getTime();\n          setCountdown(timeRemaining);\n        }, 1000);\n        return () => clearInterval(intervalId);\n      } else {\n        console.log(\"je suis dans le else\");\n        setCountdown(0);\n      }\n    }\n  }, [eventData]);\n  useEffect(() => {\n    const checkPlaylistCreated = async () => {\n      if (eventData && eventData.playlistId) {\n        const playlistRef = ref(database, `playlists/${eventData.playlistId}/created`);\n        try {\n          const playlistSnapshot = await get(playlistRef);\n          const created = playlistSnapshot.val();\n          if (created) {\n            setPlaylistCreated(true);\n          }\n        } catch (error) {\n          console.error(\"Erreur lors de la récupération du statut de création de la playlist depuis Firebase :\", error);\n        }\n      }\n    };\n    checkPlaylistCreated();\n  }, [eventData]);\n  const fetchEventData = async eventId => {\n    try {\n      const eventRef = ref(database, `events/${eventId}`);\n      const eventSnapshot = await get(eventRef);\n      if (eventSnapshot.exists()) {\n        const eventData = eventSnapshot.val();\n        setEventData(eventData);\n        if (eventData.url) {\n          setPlaylistUrl(eventData.url); // Mettre à jour l'état avec le lien de la playlist\n        }\n      } else {\n        console.log(\"Event non trouvé\");\n      }\n    } catch (error) {\n      console.error(\"Erreur :\", error);\n    }\n    setLoading(false);\n  };\n  const participateEvent = async () => {\n    try {\n      const userId = user.id;\n      const userRef = ref(database, `events/${eventId}/users/${userId}`);\n      await set(userRef, true);\n      const eventRef = ref(database, `events/${eventId}`);\n      const eventSnapshot = await get(eventRef);\n      const eventData = eventSnapshot.val();\n      const updatedEventData = {\n        ...eventData,\n        users: {\n          ...eventData.users,\n          [userId]: {\n            songsAdded: 0\n          }\n        }\n      };\n      await set(eventRef, updatedEventData);\n      setShowPopup(false);\n    } catch (error) {\n      console.error(\"Erreur :\", error);\n    }\n  };\n  const cancelParticipation = () => {\n    navigate(\"/\");\n  };\n  const formatTimeRemaining = timeRemaining => {\n    const days = Math.floor(timeRemaining / (1000 * 60 * 60 * 24));\n    const hours = Math.floor(timeRemaining / (1000 * 60 * 60) % 24);\n    const minutes = Math.floor(timeRemaining / (1000 * 60) % 60);\n    const seconds = Math.floor(timeRemaining / 1000 % 60);\n    if (days > 0) {\n      return `${days}j,${hours.toString().padStart(2, \"0\")}h,${minutes.toString().padStart(2, \"0\")}m,${seconds.toString().padStart(2, \"0\")}s`;\n    } else {\n      return `${hours.toString().padStart(2, \"0\")}:${minutes.toString().padStart(2, \"0\")}:${seconds.toString().padStart(2, \"0\")}`;\n    }\n  };\n  const createPlaylist = () => {\n    // Référence à la playlist correspondant à l'événement\n    const playlistRef = ref(database, `playlists/${eventData.playlistId}/tracks`);\n\n    // Récupérer les pistes de la playlist\n    get(playlistRef).then(snapshot => {\n      const tracks = snapshot.val();\n\n      // Trier les pistes en fonction du nombre de likes de chaque piste, en ordre décroissant\n      const sortedTracks = Object.values(tracks).sort((a, b) => b.like - a.like);\n\n      // Créer un objet avec les ID des pistes comme clés\n      const sortedTracksObject = {};\n      sortedTracks.forEach(track => {\n        sortedTracksObject[track.id] = track;\n      });\n\n      // Mettre à jour la base de données avec les pistes triées\n      set(playlistRef, sortedTracksObject).then(() => {\n        console.log(\"Playlist triée avec succès !\");\n\n        // Ajouter la propriété created à true dans la référence de la playlist dans Firebase\n        set(ref(database, `playlists/${eventData.playlistId}/created`), true).then(() => {\n          console.log(\"Statut de création mis à jour avec succès dans Firebase.\");\n        }).catch(error => {\n          console.error(\"Erreur lors de la mise à jour du statut de création dans Firebase :\", error);\n        });\n\n        // Créer la playlist sur Spotify\n        const accessToken = localStorage.getItem(\"access_token\");\n        const userId = user.id;\n        const playlistName = eventData.title;\n        const trackIds = Object.keys(sortedTracksObject);\n        console.log(\"token\", accessToken);\n        console.log(\"userId\", userId);\n        console.log(\"playlistName\", playlistName);\n        console.log(\"trackIds\", trackIds);\n        createSpotifyPlaylist(accessToken, userId, playlistName, trackIds);\n      }).catch(error => {\n        console.error(\"Erreur lors de la mise à jour de la playlist :\", error);\n      });\n    }).catch(error => {\n      console.error(\"Erreur lors de la récupération de la playlist depuis Firebase :\", error);\n    });\n  };\n  const createSpotifyPlaylist = async (accessToken, userId, playlistName, trackIds) => {\n    try {\n      // Créer la playlist sur Spotify\n      const createPlaylistResponse = await axios.post(`https://api.spotify.com/v1/users/${userId}/playlists`, {\n        name: playlistName,\n        public: true // Vous pouvez ajuster cela selon vos préférences de confidentialité\n      }, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const playlistId = createPlaylistResponse.data.id;\n\n      // Récupérer le lien de la playlist Spotify\n      const playlistUrl = createPlaylistResponse.data.external_urls.spotify;\n\n      // Ajouter les pistes à la playlist sur Spotify\n      await axios.post(`https://api.spotify.com/v1/playlists/${playlistId}/tracks`, {\n        uris: trackIds.map(id => `spotify:track:${id}`)\n      }, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n\n      // Récupérer les données actuelles de la référence de la playlist dans Firebase\n      const playlistRef = ref(database, `events/${eventId}`);\n      const playlistSnapshot = await get(playlistRef);\n      const currentPlaylistData = playlistSnapshot.val();\n\n      // Mettre à jour les données avec l'URL de la nouvelle playlist Spotify\n      await set(playlistRef, {\n        ...currentPlaylistData,\n        url: playlistUrl\n      });\n      window.location.reload();\n      console.log(\"Playlist Spotify créée avec succès !\");\n      console.log(`Vous pouvez la trouver ici : ${playlistUrl}`);\n    } catch (error) {\n      console.error(\"Erreur lors de la création de la playlist Spotify :\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: eventData && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: countdown !== null && countdown > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: \"fixed\",\n              left: \"10px\",\n              top: \"15px\"\n            },\n            onClick: () => navigate(\"/\") // Redirige vers la page d'accueil\n            ,\n            children: /*#__PURE__*/_jsxDEV(ArrowBackIosNewIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: \"fixed\",\n              top: \"10%\",\n              left: \"50%\",\n              transform: \"translateX(-50%)\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              style: {\n                fontSize: \"35px\",\n                margin: \"0px 0px 10px 0px\"\n              },\n              children: eventData.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                margin: \"0\"\n              },\n              children: \"Temps restant : \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                margin: \"0\"\n              },\n              children: [days > 0 ? `${days}j et ` : \"\", formatTimeRemaining(countdown)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 19\n          }, this), showPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"popup\",\n            style: {\n              position: \"fixed\",\n              top: \"50%\",\n              left: \"50%\",\n              transform: \"translate(-50%, -50%)\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Souhaites-tu participer \\xE0 l'\\xE9v\\xE9nement ?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: participateEvent,\n              children: \"Je participe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: cancelParticipation,\n              children: \"Je ne participe pas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 21\n          }, this), !showPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"swipe\",\n            children: /*#__PURE__*/_jsxDEV(Swipe, {\n              eventId: eventId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://firebasestorage.googleapis.com/v0/b/spotinight-13b75.appspot.com/o/logo2Black.png?alt=media&token=25439665-db8c-441f-b09e-267bee68e791\",\n            style: {\n              position: \"fixed\",\n              bottom: \"20px\",\n              left: \"50%\",\n              transform: \"translateX(-50%)\"\n            },\n            alt: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"L'\\xE9v\\xE9nement est termin\\xE9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 19\n          }, this), console.log(\"creator id\", (_eventData$creator$us = eventData.creator[user.id]) === null || _eventData$creator$us === void 0 ? void 0 : _eventData$creator$us.id), console.log(\"user id\", user.id), console.log(\"event playlist id\", eventData.playlistId), playlistCreated ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Playlist cr\\xE9\\xE9e ! Vous pouvez la trouver ici :\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: playlistUrl,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: \"lien de la playlist\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: createPlaylist,\n            children: \"Appuyez ici pour cr\\xE9er la playlist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 13\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 305,\n    columnNumber: 5\n  }, this);\n}\n_s(Event, \"FzWEHAUUmmFYtSX2TGC4CGoCVEs=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = Event;\nexport default Event;\nvar _c;\n$RefreshReg$(_c, \"Event\");","map":{"version":3,"names":["React","useState","useEffect","getUserData","isLogged","database","ref","get","set","useNavigate","useParams","ArrowBackIosNewIcon","Swipe","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Event","_s","_eventData$creator$us","navigate","eventId","user","setUser","showPopup","setShowPopup","eventData","setEventData","countdown","setCountdown","loading","setLoading","days","playlistCreated","setPlaylistCreated","playlistUrl","setPlaylistUrl","fetchData","loggedIn","userData","checkEventParticipation","userId","userRef","userSnapshot","exists","error","console","id","fetchEventData","eventDateTime","Date","date","time","now","log","intervalId","setInterval","timeRemaining","getTime","clearInterval","checkPlaylistCreated","playlistId","playlistRef","playlistSnapshot","created","val","eventRef","eventSnapshot","url","participateEvent","updatedEventData","users","songsAdded","cancelParticipation","formatTimeRemaining","Math","floor","hours","minutes","seconds","toString","padStart","createPlaylist","then","snapshot","tracks","sortedTracks","Object","values","sort","a","b","like","sortedTracksObject","forEach","track","catch","accessToken","localStorage","getItem","playlistName","title","trackIds","keys","createSpotifyPlaylist","createPlaylistResponse","post","name","public","headers","Authorization","data","external_urls","spotify","uris","map","currentPlaylistData","window","location","reload","children","fileName","_jsxFileName","lineNumber","columnNumber","style","position","left","top","onClick","transform","fontSize","margin","className","src","bottom","alt","creator","href","target","rel","_c","$RefreshReg$"],"sources":["/Users/tomtom/Desktop/spotinight/src/Pages/Event.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { getUserData, isLogged } from \"../Spotify\";\nimport { database } from \"../firebase-config\";\nimport { ref, get, set } from \"firebase/database\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport ArrowBackIosNewIcon from \"@mui/icons-material/ArrowBackIosNew\";\nimport Swipe from \"./Swipe\";\nimport axios from \"axios\";\n\nfunction Event() {\n  const navigate = useNavigate();\n  const { eventId } = useParams();\n  const [user, setUser] = useState(null);\n  const [showPopup, setShowPopup] = useState(false);\n  const [eventData, setEventData] = useState(null);\n  const [countdown, setCountdown] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [days] = useState(0);\n  const [playlistCreated, setPlaylistCreated] = useState(false);\n  const [playlistUrl, setPlaylistUrl] = useState(\"\");\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const loggedIn = isLogged();\n      if (!loggedIn) {\n        navigate(\"/\");\n      } else {\n        const userData = await getUserData();\n        setUser(userData);\n        if (userData) {\n          // Move checkEventParticipation inside the useEffect callback\n          const checkEventParticipation = async (userId) => {\n            try {\n              const userRef = ref(\n                database,\n                `events/${eventId}/users/${userId}`\n              );\n              const userSnapshot = await get(userRef);\n\n              if (userSnapshot.exists()) {\n              } else {\n                setShowPopup(true);\n              }\n            } catch (error) {\n              console.error(\"Erreur :\", error);\n            }\n          };\n\n          checkEventParticipation(userData.id);\n        }\n        await fetchEventData(eventId);\n      }\n    };\n\n    fetchData();\n  }, [navigate, eventId]); // Remove checkEventParticipation from dependencies\n\n  useEffect(() => {\n    if (eventData) {\n      const eventDateTime = new Date(`${eventData.date}T${eventData.time}`);\n      const now = new Date();\n      console.log(eventDateTime);\n      console.log(now);\n\n      if (eventDateTime > now) {\n        console.log(\"je suis dedans\");\n        const intervalId = setInterval(() => {\n          const now = new Date();\n          const timeRemaining = eventDateTime.getTime() - now.getTime();\n          setCountdown(timeRemaining);\n        }, 1000);\n\n        return () => clearInterval(intervalId);\n      } else {\n        console.log(\"je suis dans le else\");\n        setCountdown(0);\n      }\n    }\n  }, [eventData]);\n\n  useEffect(() => {\n    const checkPlaylistCreated = async () => {\n      if (eventData && eventData.playlistId) {\n        const playlistRef = ref(\n          database,\n          `playlists/${eventData.playlistId}/created`\n        );\n        try {\n          const playlistSnapshot = await get(playlistRef);\n          const created = playlistSnapshot.val();\n          if (created) {\n            setPlaylistCreated(true);\n          }\n        } catch (error) {\n          console.error(\n            \"Erreur lors de la récupération du statut de création de la playlist depuis Firebase :\",\n            error\n          );\n        }\n      }\n    };\n\n    checkPlaylistCreated();\n  }, [eventData]);\n\n  const fetchEventData = async (eventId) => {\n    try {\n      const eventRef = ref(database, `events/${eventId}`);\n      const eventSnapshot = await get(eventRef);\n      if (eventSnapshot.exists()) {\n        const eventData = eventSnapshot.val();\n        setEventData(eventData);\n        if (eventData.url) {\n          setPlaylistUrl(eventData.url); // Mettre à jour l'état avec le lien de la playlist\n        }\n      } else {\n        console.log(\"Event non trouvé\");\n      }\n    } catch (error) {\n      console.error(\"Erreur :\", error);\n    }\n    setLoading(false);\n  };\n\n  const participateEvent = async () => {\n    try {\n      const userId = user.id;\n      const userRef = ref(database, `events/${eventId}/users/${userId}`);\n      await set(userRef, true);\n\n      const eventRef = ref(database, `events/${eventId}`);\n      const eventSnapshot = await get(eventRef);\n      const eventData = eventSnapshot.val();\n\n      const updatedEventData = {\n        ...eventData,\n        users: {\n          ...eventData.users,\n          [userId]: {\n            songsAdded: 0,\n          },\n        },\n      };\n\n      await set(eventRef, updatedEventData);\n      setShowPopup(false);\n    } catch (error) {\n      console.error(\"Erreur :\", error);\n    }\n  };\n\n  const cancelParticipation = () => {\n    navigate(\"/\");\n  };\n\n  const formatTimeRemaining = (timeRemaining) => {\n    const days = Math.floor(timeRemaining / (1000 * 60 * 60 * 24));\n    const hours = Math.floor((timeRemaining / (1000 * 60 * 60)) % 24);\n    const minutes = Math.floor((timeRemaining / (1000 * 60)) % 60);\n    const seconds = Math.floor((timeRemaining / 1000) % 60);\n\n    if (days > 0) {\n      return `${days}j,${hours.toString().padStart(2, \"0\")}h,${minutes\n        .toString()\n        .padStart(2, \"0\")}m,${seconds.toString().padStart(2, \"0\")}s`;\n    } else {\n      return `${hours.toString().padStart(2, \"0\")}:${minutes\n        .toString()\n        .padStart(2, \"0\")}:${seconds.toString().padStart(2, \"0\")}`;\n    }\n  };\n\n  const createPlaylist = () => {\n    // Référence à la playlist correspondant à l'événement\n    const playlistRef = ref(\n      database,\n      `playlists/${eventData.playlistId}/tracks`\n    );\n\n    // Récupérer les pistes de la playlist\n    get(playlistRef)\n      .then((snapshot) => {\n        const tracks = snapshot.val();\n\n        // Trier les pistes en fonction du nombre de likes de chaque piste, en ordre décroissant\n        const sortedTracks = Object.values(tracks).sort(\n          (a, b) => b.like - a.like\n        );\n\n        // Créer un objet avec les ID des pistes comme clés\n        const sortedTracksObject = {};\n        sortedTracks.forEach((track) => {\n          sortedTracksObject[track.id] = track;\n        });\n\n        // Mettre à jour la base de données avec les pistes triées\n        set(playlistRef, sortedTracksObject)\n          .then(() => {\n            console.log(\"Playlist triée avec succès !\");\n\n            // Ajouter la propriété created à true dans la référence de la playlist dans Firebase\n            set(\n              ref(database, `playlists/${eventData.playlistId}/created`),\n              true\n            )\n              .then(() => {\n                console.log(\n                  \"Statut de création mis à jour avec succès dans Firebase.\"\n                );\n              })\n              .catch((error) => {\n                console.error(\n                  \"Erreur lors de la mise à jour du statut de création dans Firebase :\",\n                  error\n                );\n              });\n\n            // Créer la playlist sur Spotify\n            const accessToken = localStorage.getItem(\"access_token\");\n            const userId = user.id;\n            const playlistName = eventData.title;\n            const trackIds = Object.keys(sortedTracksObject);\n            console.log(\"token\", accessToken);\n            console.log(\"userId\", userId);\n            console.log(\"playlistName\", playlistName);\n            console.log(\"trackIds\", trackIds);\n            createSpotifyPlaylist(accessToken, userId, playlistName, trackIds);\n          })\n          .catch((error) => {\n            console.error(\n              \"Erreur lors de la mise à jour de la playlist :\",\n              error\n            );\n          });\n      })\n      .catch((error) => {\n        console.error(\n          \"Erreur lors de la récupération de la playlist depuis Firebase :\",\n          error\n        );\n      });\n  };\n\n  const createSpotifyPlaylist = async (\n    accessToken,\n    userId,\n    playlistName,\n    trackIds\n  ) => {\n    try {\n      // Créer la playlist sur Spotify\n      const createPlaylistResponse = await axios.post(\n        `https://api.spotify.com/v1/users/${userId}/playlists`,\n        {\n          name: playlistName,\n          public: true, // Vous pouvez ajuster cela selon vos préférences de confidentialité\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${accessToken}`,\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      const playlistId = createPlaylistResponse.data.id;\n\n      // Récupérer le lien de la playlist Spotify\n      const playlistUrl = createPlaylistResponse.data.external_urls.spotify;\n\n      // Ajouter les pistes à la playlist sur Spotify\n      await axios.post(\n        `https://api.spotify.com/v1/playlists/${playlistId}/tracks`,\n        { uris: trackIds.map((id) => `spotify:track:${id}`) },\n        {\n          headers: {\n            Authorization: `Bearer ${accessToken}`,\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      // Récupérer les données actuelles de la référence de la playlist dans Firebase\n      const playlistRef = ref(database, `events/${eventId}`);\n      const playlistSnapshot = await get(playlistRef);\n      const currentPlaylistData = playlistSnapshot.val();\n\n      // Mettre à jour les données avec l'URL de la nouvelle playlist Spotify\n      await set(playlistRef, {\n        ...currentPlaylistData,\n        url: playlistUrl,\n      });\n      window.location.reload();\n      console.log(\"Playlist Spotify créée avec succès !\");\n      console.log(`Vous pouvez la trouver ici : ${playlistUrl}`);\n    } catch (error) {\n      console.error(\n        \"Erreur lors de la création de la playlist Spotify :\",\n        error\n      );\n    }\n  };\n\n  return (\n    <div>\n      {loading ? (\n        <p>Loading...</p>\n      ) : (\n        <>\n          {eventData && (\n            <div>\n              {countdown !== null && countdown > 0 ? (\n                <div>\n                  <div\n                    style={{\n                      position: \"fixed\",\n                      left: \"10px\",\n                      top: \"15px\",\n                    }}\n                    onClick={() => navigate(\"/\")} // Redirige vers la page d'accueil\n                  >\n                    <ArrowBackIosNewIcon />\n                  </div>\n                  <div\n                    style={{\n                      position: \"fixed\",\n                      top: \"10%\",\n                      left: \"50%\",\n                      transform: \"translateX(-50%)\",\n                    }}>\n                    <h2\n                      style={{ fontSize: \"35px\", margin: \"0px 0px 10px 0px\" }}>\n                      {eventData.title}\n                    </h2>\n\n                    <p style={{ margin: \"0\" }}>Temps restant : </p>\n                    <p style={{ margin: \"0\" }}>\n                      {days > 0 ? `${days}j et ` : \"\"}\n                      {formatTimeRemaining(countdown)}\n                    </p>\n                  </div>\n                  {showPopup && (\n                    <div\n                      className=\"popup\"\n                      style={{\n                        position: \"fixed\",\n                        top: \"50%\",\n                        left: \"50%\",\n                        transform: \"translate(-50%, -50%)\",\n                      }}>\n                      <h3>Souhaites-tu participer à l'événement ?</h3>\n                      <button onClick={participateEvent}>Je participe</button>\n                      <button onClick={cancelParticipation}>\n                        Je ne participe pas\n                      </button>\n                    </div>\n                  )}\n                  {!showPopup && (\n                    <div className=\"swipe\">\n                      <Swipe eventId={eventId} />\n                    </div>\n                  )}\n                  <img\n                    src=\"https://firebasestorage.googleapis.com/v0/b/spotinight-13b75.appspot.com/o/logo2Black.png?alt=media&token=25439665-db8c-441f-b09e-267bee68e791\"\n                    style={{\n                      position: \"fixed\",\n                      bottom: \"20px\",\n                      left: \"50%\",\n                      transform: \"translateX(-50%)\",\n                    }}\n                    alt=\"logo\"\n                  />\n                </div>\n              ) : (\n                <div>\n                  <p>L'événement est terminé</p>\n                  {console.log(\"creator id\", eventData.creator[user.id]?.id)}\n                  {console.log(\"user id\", user.id)}\n                  {console.log(\"event playlist id\", eventData.playlistId)}\n                  {playlistCreated ? (\n                    <p>\n                      Playlist créée ! Vous pouvez la trouver ici :{\" \"}\n                      <a\n                        href={playlistUrl}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\">\n                        lien de la playlist\n                      </a>\n                    </p>\n                  ) : (\n                    <button onClick={createPlaylist}>\n                      Appuyez ici pour créer la playlist\n                    </button>\n                  )}\n                </div>\n              )}\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default Event;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,QAAQ,QAAQ,YAAY;AAClD,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,GAAG,EAAEC,GAAG,EAAEC,GAAG,QAAQ,mBAAmB;AACjD,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AACzD,OAAOC,mBAAmB,MAAM,qCAAqC;AACrE,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,qBAAA;EACf,MAAMC,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEa;EAAQ,CAAC,GAAGZ,SAAS,CAAC,CAAC;EAC/B,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACwB,SAAS,EAAEC,YAAY,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC0B,SAAS,EAAEC,YAAY,CAAC,GAAG3B,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAAC4B,SAAS,EAAEC,YAAY,CAAC,GAAG7B,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAAC8B,OAAO,EAAEC,UAAU,CAAC,GAAG/B,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACgC,IAAI,CAAC,GAAGhC,QAAQ,CAAC,CAAC,CAAC;EAC1B,MAAM,CAACiC,eAAe,EAAEC,kBAAkB,CAAC,GAAGlC,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACmC,WAAW,EAAEC,cAAc,CAAC,GAAGpC,QAAQ,CAAC,EAAE,CAAC;EAElDC,SAAS,CAAC,MAAM;IACd,MAAMoC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,QAAQ,GAAGnC,QAAQ,CAAC,CAAC;MAC3B,IAAI,CAACmC,QAAQ,EAAE;QACblB,QAAQ,CAAC,GAAG,CAAC;MACf,CAAC,MAAM;QACL,MAAMmB,QAAQ,GAAG,MAAMrC,WAAW,CAAC,CAAC;QACpCqB,OAAO,CAACgB,QAAQ,CAAC;QACjB,IAAIA,QAAQ,EAAE;UACZ;UACA,MAAMC,uBAAuB,GAAG,MAAOC,MAAM,IAAK;YAChD,IAAI;cACF,MAAMC,OAAO,GAAGrC,GAAG,CACjBD,QAAQ,EACP,UAASiB,OAAQ,UAASoB,MAAO,EACpC,CAAC;cACD,MAAME,YAAY,GAAG,MAAMrC,GAAG,CAACoC,OAAO,CAAC;cAEvC,IAAIC,YAAY,CAACC,MAAM,CAAC,CAAC,EAAE,CAC3B,CAAC,MAAM;gBACLnB,YAAY,CAAC,IAAI,CAAC;cACpB;YACF,CAAC,CAAC,OAAOoB,KAAK,EAAE;cACdC,OAAO,CAACD,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;YAClC;UACF,CAAC;UAEDL,uBAAuB,CAACD,QAAQ,CAACQ,EAAE,CAAC;QACtC;QACA,MAAMC,cAAc,CAAC3B,OAAO,CAAC;MAC/B;IACF,CAAC;IAEDgB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACjB,QAAQ,EAAEC,OAAO,CAAC,CAAC,CAAC,CAAC;;EAEzBpB,SAAS,CAAC,MAAM;IACd,IAAIyB,SAAS,EAAE;MACb,MAAMuB,aAAa,GAAG,IAAIC,IAAI,CAAE,GAAExB,SAAS,CAACyB,IAAK,IAAGzB,SAAS,CAAC0B,IAAK,EAAC,CAAC;MACrE,MAAMC,GAAG,GAAG,IAAIH,IAAI,CAAC,CAAC;MACtBJ,OAAO,CAACQ,GAAG,CAACL,aAAa,CAAC;MAC1BH,OAAO,CAACQ,GAAG,CAACD,GAAG,CAAC;MAEhB,IAAIJ,aAAa,GAAGI,GAAG,EAAE;QACvBP,OAAO,CAACQ,GAAG,CAAC,gBAAgB,CAAC;QAC7B,MAAMC,UAAU,GAAGC,WAAW,CAAC,MAAM;UACnC,MAAMH,GAAG,GAAG,IAAIH,IAAI,CAAC,CAAC;UACtB,MAAMO,aAAa,GAAGR,aAAa,CAACS,OAAO,CAAC,CAAC,GAAGL,GAAG,CAACK,OAAO,CAAC,CAAC;UAC7D7B,YAAY,CAAC4B,aAAa,CAAC;QAC7B,CAAC,EAAE,IAAI,CAAC;QAER,OAAO,MAAME,aAAa,CAACJ,UAAU,CAAC;MACxC,CAAC,MAAM;QACLT,OAAO,CAACQ,GAAG,CAAC,sBAAsB,CAAC;QACnCzB,YAAY,CAAC,CAAC,CAAC;MACjB;IACF;EACF,CAAC,EAAE,CAACH,SAAS,CAAC,CAAC;EAEfzB,SAAS,CAAC,MAAM;IACd,MAAM2D,oBAAoB,GAAG,MAAAA,CAAA,KAAY;MACvC,IAAIlC,SAAS,IAAIA,SAAS,CAACmC,UAAU,EAAE;QACrC,MAAMC,WAAW,GAAGzD,GAAG,CACrBD,QAAQ,EACP,aAAYsB,SAAS,CAACmC,UAAW,UACpC,CAAC;QACD,IAAI;UACF,MAAME,gBAAgB,GAAG,MAAMzD,GAAG,CAACwD,WAAW,CAAC;UAC/C,MAAME,OAAO,GAAGD,gBAAgB,CAACE,GAAG,CAAC,CAAC;UACtC,IAAID,OAAO,EAAE;YACX9B,kBAAkB,CAAC,IAAI,CAAC;UAC1B;QACF,CAAC,CAAC,OAAOW,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CACX,uFAAuF,EACvFA,KACF,CAAC;QACH;MACF;IACF,CAAC;IAEDe,oBAAoB,CAAC,CAAC;EACxB,CAAC,EAAE,CAAClC,SAAS,CAAC,CAAC;EAEf,MAAMsB,cAAc,GAAG,MAAO3B,OAAO,IAAK;IACxC,IAAI;MACF,MAAM6C,QAAQ,GAAG7D,GAAG,CAACD,QAAQ,EAAG,UAASiB,OAAQ,EAAC,CAAC;MACnD,MAAM8C,aAAa,GAAG,MAAM7D,GAAG,CAAC4D,QAAQ,CAAC;MACzC,IAAIC,aAAa,CAACvB,MAAM,CAAC,CAAC,EAAE;QAC1B,MAAMlB,SAAS,GAAGyC,aAAa,CAACF,GAAG,CAAC,CAAC;QACrCtC,YAAY,CAACD,SAAS,CAAC;QACvB,IAAIA,SAAS,CAAC0C,GAAG,EAAE;UACjBhC,cAAc,CAACV,SAAS,CAAC0C,GAAG,CAAC,CAAC,CAAC;QACjC;MACF,CAAC,MAAM;QACLtB,OAAO,CAACQ,GAAG,CAAC,kBAAkB,CAAC;MACjC;IACF,CAAC,CAAC,OAAOT,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;IAClC;IACAd,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAED,MAAMsC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF,MAAM5B,MAAM,GAAGnB,IAAI,CAACyB,EAAE;MACtB,MAAML,OAAO,GAAGrC,GAAG,CAACD,QAAQ,EAAG,UAASiB,OAAQ,UAASoB,MAAO,EAAC,CAAC;MAClE,MAAMlC,GAAG,CAACmC,OAAO,EAAE,IAAI,CAAC;MAExB,MAAMwB,QAAQ,GAAG7D,GAAG,CAACD,QAAQ,EAAG,UAASiB,OAAQ,EAAC,CAAC;MACnD,MAAM8C,aAAa,GAAG,MAAM7D,GAAG,CAAC4D,QAAQ,CAAC;MACzC,MAAMxC,SAAS,GAAGyC,aAAa,CAACF,GAAG,CAAC,CAAC;MAErC,MAAMK,gBAAgB,GAAG;QACvB,GAAG5C,SAAS;QACZ6C,KAAK,EAAE;UACL,GAAG7C,SAAS,CAAC6C,KAAK;UAClB,CAAC9B,MAAM,GAAG;YACR+B,UAAU,EAAE;UACd;QACF;MACF,CAAC;MAED,MAAMjE,GAAG,CAAC2D,QAAQ,EAAEI,gBAAgB,CAAC;MACrC7C,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,OAAOoB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;IAClC;EACF,CAAC;EAED,MAAM4B,mBAAmB,GAAGA,CAAA,KAAM;IAChCrD,QAAQ,CAAC,GAAG,CAAC;EACf,CAAC;EAED,MAAMsD,mBAAmB,GAAIjB,aAAa,IAAK;IAC7C,MAAMzB,IAAI,GAAG2C,IAAI,CAACC,KAAK,CAACnB,aAAa,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;IAC9D,MAAMoB,KAAK,GAAGF,IAAI,CAACC,KAAK,CAAEnB,aAAa,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,GAAI,EAAE,CAAC;IACjE,MAAMqB,OAAO,GAAGH,IAAI,CAACC,KAAK,CAAEnB,aAAa,IAAI,IAAI,GAAG,EAAE,CAAC,GAAI,EAAE,CAAC;IAC9D,MAAMsB,OAAO,GAAGJ,IAAI,CAACC,KAAK,CAAEnB,aAAa,GAAG,IAAI,GAAI,EAAE,CAAC;IAEvD,IAAIzB,IAAI,GAAG,CAAC,EAAE;MACZ,OAAQ,GAAEA,IAAK,KAAI6C,KAAK,CAACG,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,KAAIH,OAAO,CAC7DE,QAAQ,CAAC,CAAC,CACVC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,KAAIF,OAAO,CAACC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,GAAE;IAChE,CAAC,MAAM;MACL,OAAQ,GAAEJ,KAAK,CAACG,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,IAAGH,OAAO,CACnDE,QAAQ,CAAC,CAAC,CACVC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,IAAGF,OAAO,CAACC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,EAAC;IAC9D;EACF,CAAC;EAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B;IACA,MAAMpB,WAAW,GAAGzD,GAAG,CACrBD,QAAQ,EACP,aAAYsB,SAAS,CAACmC,UAAW,SACpC,CAAC;;IAED;IACAvD,GAAG,CAACwD,WAAW,CAAC,CACbqB,IAAI,CAAEC,QAAQ,IAAK;MAClB,MAAMC,MAAM,GAAGD,QAAQ,CAACnB,GAAG,CAAC,CAAC;;MAE7B;MACA,MAAMqB,YAAY,GAAGC,MAAM,CAACC,MAAM,CAACH,MAAM,CAAC,CAACI,IAAI,CAC7C,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,IAAI,GAAGF,CAAC,CAACE,IACvB,CAAC;;MAED;MACA,MAAMC,kBAAkB,GAAG,CAAC,CAAC;MAC7BP,YAAY,CAACQ,OAAO,CAAEC,KAAK,IAAK;QAC9BF,kBAAkB,CAACE,KAAK,CAAChD,EAAE,CAAC,GAAGgD,KAAK;MACtC,CAAC,CAAC;;MAEF;MACAxF,GAAG,CAACuD,WAAW,EAAE+B,kBAAkB,CAAC,CACjCV,IAAI,CAAC,MAAM;QACVrC,OAAO,CAACQ,GAAG,CAAC,8BAA8B,CAAC;;QAE3C;QACA/C,GAAG,CACDF,GAAG,CAACD,QAAQ,EAAG,aAAYsB,SAAS,CAACmC,UAAW,UAAS,CAAC,EAC1D,IACF,CAAC,CACEsB,IAAI,CAAC,MAAM;UACVrC,OAAO,CAACQ,GAAG,CACT,0DACF,CAAC;QACH,CAAC,CAAC,CACD0C,KAAK,CAAEnD,KAAK,IAAK;UAChBC,OAAO,CAACD,KAAK,CACX,qEAAqE,EACrEA,KACF,CAAC;QACH,CAAC,CAAC;;QAEJ;QACA,MAAMoD,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;QACxD,MAAM1D,MAAM,GAAGnB,IAAI,CAACyB,EAAE;QACtB,MAAMqD,YAAY,GAAG1E,SAAS,CAAC2E,KAAK;QACpC,MAAMC,QAAQ,GAAGf,MAAM,CAACgB,IAAI,CAACV,kBAAkB,CAAC;QAChD/C,OAAO,CAACQ,GAAG,CAAC,OAAO,EAAE2C,WAAW,CAAC;QACjCnD,OAAO,CAACQ,GAAG,CAAC,QAAQ,EAAEb,MAAM,CAAC;QAC7BK,OAAO,CAACQ,GAAG,CAAC,cAAc,EAAE8C,YAAY,CAAC;QACzCtD,OAAO,CAACQ,GAAG,CAAC,UAAU,EAAEgD,QAAQ,CAAC;QACjCE,qBAAqB,CAACP,WAAW,EAAExD,MAAM,EAAE2D,YAAY,EAAEE,QAAQ,CAAC;MACpE,CAAC,CAAC,CACDN,KAAK,CAAEnD,KAAK,IAAK;QAChBC,OAAO,CAACD,KAAK,CACX,gDAAgD,EAChDA,KACF,CAAC;MACH,CAAC,CAAC;IACN,CAAC,CAAC,CACDmD,KAAK,CAAEnD,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CACX,iEAAiE,EACjEA,KACF,CAAC;IACH,CAAC,CAAC;EACN,CAAC;EAED,MAAM2D,qBAAqB,GAAG,MAAAA,CAC5BP,WAAW,EACXxD,MAAM,EACN2D,YAAY,EACZE,QAAQ,KACL;IACH,IAAI;MACF;MACA,MAAMG,sBAAsB,GAAG,MAAM7F,KAAK,CAAC8F,IAAI,CAC5C,oCAAmCjE,MAAO,YAAW,EACtD;QACEkE,IAAI,EAAEP,YAAY;QAClBQ,MAAM,EAAE,IAAI,CAAE;MAChB,CAAC,EACD;QACEC,OAAO,EAAE;UACPC,aAAa,EAAG,UAASb,WAAY,EAAC;UACtC,cAAc,EAAE;QAClB;MACF,CACF,CAAC;MAED,MAAMpC,UAAU,GAAG4C,sBAAsB,CAACM,IAAI,CAAChE,EAAE;;MAEjD;MACA,MAAMZ,WAAW,GAAGsE,sBAAsB,CAACM,IAAI,CAACC,aAAa,CAACC,OAAO;;MAErE;MACA,MAAMrG,KAAK,CAAC8F,IAAI,CACb,wCAAuC7C,UAAW,SAAQ,EAC3D;QAAEqD,IAAI,EAAEZ,QAAQ,CAACa,GAAG,CAAEpE,EAAE,IAAM,iBAAgBA,EAAG,EAAC;MAAE,CAAC,EACrD;QACE8D,OAAO,EAAE;UACPC,aAAa,EAAG,UAASb,WAAY,EAAC;UACtC,cAAc,EAAE;QAClB;MACF,CACF,CAAC;;MAED;MACA,MAAMnC,WAAW,GAAGzD,GAAG,CAACD,QAAQ,EAAG,UAASiB,OAAQ,EAAC,CAAC;MACtD,MAAM0C,gBAAgB,GAAG,MAAMzD,GAAG,CAACwD,WAAW,CAAC;MAC/C,MAAMsD,mBAAmB,GAAGrD,gBAAgB,CAACE,GAAG,CAAC,CAAC;;MAElD;MACA,MAAM1D,GAAG,CAACuD,WAAW,EAAE;QACrB,GAAGsD,mBAAmB;QACtBhD,GAAG,EAAEjC;MACP,CAAC,CAAC;MACFkF,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;MACxBzE,OAAO,CAACQ,GAAG,CAAC,sCAAsC,CAAC;MACnDR,OAAO,CAACQ,GAAG,CAAE,gCAA+BnB,WAAY,EAAC,CAAC;IAC5D,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CACX,qDAAqD,EACrDA,KACF,CAAC;IACH;EACF,CAAC;EAED,oBACE/B,OAAA;IAAA0G,QAAA,EACG1F,OAAO,gBACNhB,OAAA;MAAA0G,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEjB9G,OAAA,CAAAE,SAAA;MAAAwG,QAAA,EACG9F,SAAS,iBACRZ,OAAA;QAAA0G,QAAA,EACG5F,SAAS,KAAK,IAAI,IAAIA,SAAS,GAAG,CAAC,gBAClCd,OAAA;UAAA0G,QAAA,gBACE1G,OAAA;YACE+G,KAAK,EAAE;cACLC,QAAQ,EAAE,OAAO;cACjBC,IAAI,EAAE,MAAM;cACZC,GAAG,EAAE;YACP,CAAE;YACFC,OAAO,EAAEA,CAAA,KAAM7G,QAAQ,CAAC,GAAG,CAAE,CAAC;YAAA;YAAAoG,QAAA,eAE9B1G,OAAA,CAACJ,mBAAmB;cAAA+G,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpB,CAAC,eACN9G,OAAA;YACE+G,KAAK,EAAE;cACLC,QAAQ,EAAE,OAAO;cACjBE,GAAG,EAAE,KAAK;cACVD,IAAI,EAAE,KAAK;cACXG,SAAS,EAAE;YACb,CAAE;YAAAV,QAAA,gBACF1G,OAAA;cACE+G,KAAK,EAAE;gBAAEM,QAAQ,EAAE,MAAM;gBAAEC,MAAM,EAAE;cAAmB,CAAE;cAAAZ,QAAA,EACvD9F,SAAS,CAAC2E;YAAK;cAAAoB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACd,CAAC,eAEL9G,OAAA;cAAG+G,KAAK,EAAE;gBAAEO,MAAM,EAAE;cAAI,CAAE;cAAAZ,QAAA,EAAC;YAAgB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eAC/C9G,OAAA;cAAG+G,KAAK,EAAE;gBAAEO,MAAM,EAAE;cAAI,CAAE;cAAAZ,QAAA,GACvBxF,IAAI,GAAG,CAAC,GAAI,GAAEA,IAAK,OAAM,GAAG,EAAE,EAC9B0C,mBAAmB,CAAC9C,SAAS,CAAC;YAAA;cAAA6F,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9B,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC,EACLpG,SAAS,iBACRV,OAAA;YACEuH,SAAS,EAAC,OAAO;YACjBR,KAAK,EAAE;cACLC,QAAQ,EAAE,OAAO;cACjBE,GAAG,EAAE,KAAK;cACVD,IAAI,EAAE,KAAK;cACXG,SAAS,EAAE;YACb,CAAE;YAAAV,QAAA,gBACF1G,OAAA;cAAA0G,QAAA,EAAI;YAAuC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAChD9G,OAAA;cAAQmH,OAAO,EAAE5D,gBAAiB;cAAAmD,QAAA,EAAC;YAAY;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACxD9G,OAAA;cAAQmH,OAAO,EAAExD,mBAAoB;cAAA+C,QAAA,EAAC;YAEtC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CACN,EACA,CAACpG,SAAS,iBACTV,OAAA;YAAKuH,SAAS,EAAC,OAAO;YAAAb,QAAA,eACpB1G,OAAA,CAACH,KAAK;cAACU,OAAO,EAAEA;YAAQ;cAAAoG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxB,CACN,eACD9G,OAAA;YACEwH,GAAG,EAAC,gJAAgJ;YACpJT,KAAK,EAAE;cACLC,QAAQ,EAAE,OAAO;cACjBS,MAAM,EAAE,MAAM;cACdR,IAAI,EAAE,KAAK;cACXG,SAAS,EAAE;YACb,CAAE;YACFM,GAAG,EAAC;UAAM;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,gBAEN9G,OAAA;UAAA0G,QAAA,gBACE1G,OAAA;YAAA0G,QAAA,EAAG;UAAuB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,EAC7B9E,OAAO,CAACQ,GAAG,CAAC,YAAY,GAAAnC,qBAAA,GAAEO,SAAS,CAAC+G,OAAO,CAACnH,IAAI,CAACyB,EAAE,CAAC,cAAA5B,qBAAA,uBAA1BA,qBAAA,CAA4B4B,EAAE,CAAC,EACzDD,OAAO,CAACQ,GAAG,CAAC,SAAS,EAAEhC,IAAI,CAACyB,EAAE,CAAC,EAC/BD,OAAO,CAACQ,GAAG,CAAC,mBAAmB,EAAE5B,SAAS,CAACmC,UAAU,CAAC,EACtD5B,eAAe,gBACdnB,OAAA;YAAA0G,QAAA,GAAG,qDAC4C,EAAC,GAAG,eACjD1G,OAAA;cACE4H,IAAI,EAAEvG,WAAY;cAClBwG,MAAM,EAAC,QAAQ;cACfC,GAAG,EAAC,qBAAqB;cAAApB,QAAA,EAAC;YAE5B;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,gBAEJ9G,OAAA;YAAQmH,OAAO,EAAE/C,cAAe;YAAAsC,QAAA,EAAC;UAEjC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CACT;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE;MACN;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IACN,gBACD;EACH;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC1G,EAAA,CAzYQD,KAAK;EAAA,QACKT,WAAW,EACRC,SAAS;AAAA;AAAAoI,EAAA,GAFtB5H,KAAK;AA2Yd,eAAeA,KAAK;AAAC,IAAA4H,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}