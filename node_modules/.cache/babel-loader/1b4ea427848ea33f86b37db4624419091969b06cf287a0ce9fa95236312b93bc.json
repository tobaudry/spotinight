{"ast":null,"code":"var _jsxFileName = \"/Users/tomtom/Desktop/spotinight/src/Pages/Swipe.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { database } from \"../firebase-config\";\nimport { ref, get, set, update } from \"firebase/database\";\nimport { getTrackInfo } from \"../Spotify\";\nimport { searchTracks, currentToken } from \"../Spotify\";\nimport { useNavigate } from \"react-router-dom\";\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport AddCircleIcon from \"@mui/icons-material/AddCircle\";\nimport PlaylistAddCheckIcon from \"@mui/icons-material/PlaylistAddCheck\";\nimport VolumeUpIcon from \"@mui/icons-material/VolumeUp\";\nimport VolumeOffIcon from \"@mui/icons-material/VolumeOff\";\nimport \"../css/Swipe.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Swipe({\n  eventId\n}) {\n  _s();\n  const navigate = useNavigate();\n  const [playlist, setPlaylist] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [currentTrackInfo, setCurrentTrackInfo] = useState(null);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [showSearchPopup, setShowSearchPopup] = useState(false);\n  const [userTracks, setUserTracks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [isMuted, setIsMuted] = useState(false);\n  const [swipeEnd, setSwipeEnd] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [remainingAdds, setRemainingAdds] = useState(3);\n  const [limiteAjout, setLimiteAjout] = useState(0);\n  const userId = localStorage.getItem(\"userId\");\n  useEffect(() => {\n    if (!currentToken.access_token) {\n      navigate(\"/login\");\n    }\n  }, [navigate]);\n  useEffect(() => {\n    const fetchUserTracks = async () => {\n      if (userId) {\n        const tracks = await getUserTracks(userId);\n        setUserTracks(tracks);\n      }\n    };\n    fetchUserTracks();\n  }, [userId]);\n  useEffect(() => {\n    const fetchRemainingAdds = async () => {\n      try {\n        const limiteAjoutRef = ref(database, `events/${eventId}/limiteAjout`);\n        const limiteAjoutSnapshot = await get(limiteAjoutRef);\n        const limiteAjout = limiteAjoutSnapshot.val();\n        setLimiteAjout(limiteAjout); // Mise à jour de l'état local limiteAjout\n        const userSongsRef = ref(database, `events/${eventId}/users/${userId}/songsAdded`);\n        const userSongsSnapshot = await get(userSongsRef);\n        const userSongsCount = userSongsSnapshot.val() ? userSongsSnapshot.val() : 0;\n        const remainingAdds = limiteAjout - userSongsCount;\n        setRemainingAdds(remainingAdds);\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération du nombre d'ajouts restants :\", error);\n      }\n    };\n    fetchRemainingAdds();\n  }, [eventId, userId]);\n  const toggleMute = () => {\n    setIsMuted(!isMuted);\n  };\n  const handleSearch = async e => {\n    e.preventDefault();\n    if (!searchTerm) return;\n    try {\n      const tracks = await searchTracks(searchTerm, currentToken.access_token);\n      setSearchResults(tracks);\n    } catch (error) {\n      console.error(\"Erreur lors de la recherche de pistes :\", error);\n    }\n  };\n  const addTrackToEventPlaylist = async trackId => {\n    try {\n      const eventPlaylistRef = ref(database, `playlists/${eventId}/tracks/${trackId}`);\n      const playlistSnapshot = await get(eventPlaylistRef);\n      if (playlistSnapshot.exists()) {\n        console.log(\"La piste est déjà dans la playlist de l'événement.\");\n        setErrorMessage(\"La piste est déjà dans la playlist de l'événement.\");\n        return;\n      }\n      const userSongsRef = ref(database, `events/${eventId}/users/${userId}/songsAdded`);\n      const userSongsSnapshot = await get(userSongsRef);\n      const limiteAjoutRef = ref(database, `events/${eventId}/limiteAjout`);\n      const limiteAjoutSnapshot = await get(limiteAjoutRef);\n      const userSongsCount = userSongsSnapshot.val() ? userSongsSnapshot.val() + 1 : 1;\n      const limiteAjout = limiteAjoutSnapshot.val();\n      if (userSongsCount > limiteAjout) {\n        console.log(\"Limite d'ajout de chansons atteinte pour cet utilisateur.\");\n        setErrorMessage(\"Limite d'ajout de chansons atteinte pour cet utilisateur.\");\n        return;\n      }\n      await set(eventPlaylistRef, {\n        id: trackId,\n        like: 0\n      });\n      await set(userSongsRef, userSongsCount);\n      console.log(\"Piste ajoutée à la playlist de l'événement.\");\n      setErrorMessage(\"\");\n      window.location.reload();\n    } catch (error) {\n      console.error(\"Erreur lors de l'ajout de la piste à la playlist de l'événement :\", error);\n    }\n  };\n  const addToUserTracks = async (userId, trackId) => {\n    const userTracksRef = ref(database, `users/${userId}/tracksMeet/${trackId}`);\n    await set(userTracksRef, trackId);\n  };\n  const getUserTracks = async userId => {\n    try {\n      const userTracksRef = ref(database, `users/${userId}/tracksMeet`);\n      const userTracksSnapshot = await get(userTracksRef);\n      if (userTracksSnapshot.exists()) {\n        const userTracksData = userTracksSnapshot.val();\n        const userTracks = Object.keys(userTracksData);\n        return userTracks;\n      } else {\n        console.log(\"Aucune musique rencontrée pour cet utilisateur.\");\n        return [];\n      }\n    } catch (error) {\n      console.error(\"Erreur lors de la récupération des musiques rencontrées :\", error);\n      return [];\n    }\n  };\n  useEffect(() => {\n    const fetchPlaylist = async () => {\n      try {\n        const playlistRef = ref(database, `playlists/${eventId}/tracks`);\n        const playlistSnapshot = await get(playlistRef);\n        if (playlistSnapshot.exists()) {\n          const playlistData = playlistSnapshot.val();\n          const tracks = Object.entries(playlistData).map(([id, track]) => ({\n            id,\n            ...track\n          }));\n          const filteredTracks = tracks.filter(track => {\n            return !userTracks.includes(track.id);\n          });\n          setPlaylist(filteredTracks);\n          if (playlist.length > 0) {\n            setSwipeEnd(false);\n          }\n          // setLoading(false); // Mettre fin au chargement une fois que les musiques sont chargées\n        } else {\n          console.log(\"Playlist non trouvée\");\n          // setLoading(false); // Mettre fin au chargement si aucune playlist n'est trouvée\n        }\n      } catch (error) {\n        console.error(\"Erreur :\", error);\n        // setLoading(false); // Mettre fin au chargement en cas d'erreur\n      }\n    };\n    fetchPlaylist();\n  }, [eventId, userTracks]);\n  useEffect(() => {\n    const fetchTrackInfo = async () => {\n      if (playlist.length > 0) {\n        const trackId = playlist[currentIndex].id;\n        try {\n          // Vérifier si l'ID du morceau est différent du premier ID de la playlist de référence\n          // ou si le premier ID de la playlist de référence ne se trouve pas dans les userTracks\n          const firstTrackId = playlist[0].id;\n          if (trackId !== firstTrackId || !userTracks.includes(firstTrackId)) {\n            const trackInfo = await getTrackInfo(trackId);\n            setCurrentTrackInfo(trackInfo);\n            setLoading(false);\n          } else {\n            // Ne pas mettre à jour le morceau actuel car il ne remplit pas les critères\n            console.log(\"L'ID du morceau est le même que celui du premier morceau de la playlist ou est présent dans les userTracks.\");\n          }\n        } catch (error) {\n          console.error(\"Erreur lors de la récupération des informations sur la piste :\", error);\n        }\n      } else if (playlist.length === 0) {\n        setSwipeEnd(true);\n        setLoading(false);\n      }\n    };\n    fetchTrackInfo();\n  }, [playlist, currentIndex, userTracks]);\n  useEffect(() => {\n    const audioElement = document.getElementById(\"audioPreview\");\n    const handleCanPlayThrough = () => {\n      if (audioElement) {\n        audioElement.play().catch(error => {\n          console.error(\"Impossible de démarrer la lecture automatique :\", error);\n        });\n      }\n    };\n    if (audioElement) {\n      audioElement.addEventListener(\"canplaythrough\", handleCanPlayThrough);\n    }\n    return () => {\n      if (audioElement) {\n        audioElement.removeEventListener(\"canplaythrough\", handleCanPlayThrough);\n      }\n    };\n  }, [currentTrackInfo]);\n  useEffect(() => {\n    const audioElement = document.getElementById(\"audioPreview\");\n    if (audioElement) {\n      audioElement.volume = isMuted ? 0 : 1;\n    }\n  }, [isMuted]);\n  const nextTrack = async () => {\n    if (currentIndex < playlist.length - 1) {\n      const currentTrackId = playlist[currentIndex].id;\n      const eventPlaylistRef = ref(database, `playlists/${eventId}/tracks/${currentTrackId}`);\n      await update(eventPlaylistRef, {\n        like: playlist[currentIndex].like + 1\n      });\n      await addToUserTracks(userId, currentTrackId);\n      setCurrentIndex(prevIndex => prevIndex + 1);\n    } else if (currentIndex == playlist.length - 1) {\n      const currentTrackId = playlist[currentIndex].id;\n      const eventPlaylistRef = ref(database, `playlists/${eventId}/tracks/${currentTrackId}`);\n      await update(eventPlaylistRef, {\n        like: playlist[currentIndex].like + 1\n      });\n      await addToUserTracks(userId, currentTrackId);\n      setSwipeEnd(true);\n    }\n  };\n  const prevTrack = async () => {\n    if (currentIndex >= 0 && currentIndex < playlist.length - 1) {\n      setCurrentIndex(prevIndex => prevIndex + 1);\n      const currentTrackId = playlist[currentIndex].id;\n      await addToUserTracks(userId, currentTrackId);\n    } else if (currentIndex == playlist.length - 1) {\n      const currentTrackId = playlist[currentIndex].id;\n      await addToUserTracks(userId, currentTrackId);\n      setSwipeEnd(true);\n    }\n  };\n  const handleClosePopup = () => {\n    setShowSearchPopup(false);\n    setSearchTerm(\"\");\n    setSearchResults([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loading ?\n    /*#__PURE__*/\n    // Afficher le chargement si les musiques sont en cours de chargement\n    _jsxDEV(\"div\", {\n      children: \"Chargement...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 9\n    }, this) : currentTrackInfo && !swipeEnd ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [!showSearchPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"fixed\",\n          top: \"10px\",\n          right: \"10px\",\n          zIndex: \"999999\"\n        },\n        children: isMuted ? /*#__PURE__*/_jsxDEV(VolumeOffIcon, {\n          onClick: toggleMute\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(VolumeUpIcon, {\n          onClick: toggleMute\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"fixed\",\n          top: \"50%\",\n          left: \"50%\",\n          transform: \"translate(-50%, -50%)\"\n        },\n        children: [currentTrackInfo.album.images.length > 0 && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: currentTrackInfo.album.images[0].url,\n          alt: \"Image de la piste\",\n          style: {\n            maxWidth: \"300px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontWeight: \"bold\",\n            margin: \"10px\"\n          },\n          children: currentTrackInfo.artists[0].name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: \"0\"\n          },\n          children: currentTrackInfo.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: \"fixed\",\n            top: \"50%\",\n            left: \"50%\",\n            transform: \"translate(-50%, -50%)\"\n          },\n          children: [currentTrackInfo.preview_url && !isMuted && /*#__PURE__*/_jsxDEV(\"audio\", {\n            controls: true,\n            id: \"audioPreview\",\n            src: currentTrackInfo.preview_url,\n            muted: isMuted ? \"muted\" : \"\",\n            style: {\n              width: \"200px\",\n              backgroundColor: \"transparent\",\n              borderRadius: \"10px\",\n              boxShadow: \"0px 0px 10px rgba(0, 0, 0, 0.1)\" // Ajoute une ombre subtile\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 17\n          }, this), !currentTrackInfo.preview_url && !isMuted && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Aucun audio disponible\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tripleButton\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: prevTrack,\n            style: {\n              color: \"red\",\n              border: \"red solid 2px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowSearchPopup(true),\n            children: /*#__PURE__*/_jsxDEV(PlaylistAddCheckIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: nextTrack,\n            style: {\n              color: \"#1db954\",\n              border: \"#1db954 solid 2px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(FavoriteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Aucun son disponible\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tripleButton\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowSearchPopup(true),\n          children: /*#__PURE__*/_jsxDEV(PlaylistAddCheckIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 9\n    }, this) // Afficher un message si aucun son n'est disponible\n    , showSearchPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Ajout(s) restant(s) : \", remainingAdds, \"/\", limiteAjout]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 11\n      }, this), remainingAdds > 0 && /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSearch,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value),\n          placeholder: \"Recherche une chanson\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Rechercher\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: searchResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: errorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 34\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"search-results-container\",\n            children: searchResults.map((track, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"search-result\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: track.album.images[0].url,\n                alt: \"Couverture de l'album\",\n                className: \"search-result-image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"search-result-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    fontWeight: \"bold\"\n                  },\n                  children: track.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 440,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: track.artists.map(artist => artist.name).join(\", \")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 441,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"buttonAdd\",\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => addTrackToEventPlaylist(track.id),\n                  children: /*#__PURE__*/_jsxDEV(AddCircleIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 452,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 450,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 23\n              }, this)]\n            }, track.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 11\n      }, this), remainingAdds <= 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"fixed\",\n          top: \"50%\"\n        },\n        children: \"Vous ne pouvez plus ajouter de son.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClosePopup,\n        style: {\n          position: \"fixed\",\n          bottom: \"0\",\n          margin: \"0\",\n          borderRadius: \"0\"\n        },\n        children: \"Fermer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 315,\n    columnNumber: 5\n  }, this);\n}\n_s(Swipe, \"URTVTzoujvPL95RUmAZDBR/vd1U=\", false, function () {\n  return [useNavigate];\n});\n_c = Swipe;\nexport default Swipe;\nvar _c;\n$RefreshReg$(_c, \"Swipe\");","map":{"version":3,"names":["React","useState","useEffect","database","ref","get","set","update","getTrackInfo","searchTracks","currentToken","useNavigate","FavoriteIcon","CloseIcon","AddCircleIcon","PlaylistAddCheckIcon","VolumeUpIcon","VolumeOffIcon","jsxDEV","_jsxDEV","Swipe","eventId","_s","navigate","playlist","setPlaylist","currentIndex","setCurrentIndex","currentTrackInfo","setCurrentTrackInfo","searchTerm","setSearchTerm","searchResults","setSearchResults","showSearchPopup","setShowSearchPopup","userTracks","setUserTracks","loading","setLoading","isMuted","setIsMuted","swipeEnd","setSwipeEnd","errorMessage","setErrorMessage","remainingAdds","setRemainingAdds","limiteAjout","setLimiteAjout","userId","localStorage","getItem","access_token","fetchUserTracks","tracks","getUserTracks","fetchRemainingAdds","limiteAjoutRef","limiteAjoutSnapshot","val","userSongsRef","userSongsSnapshot","userSongsCount","error","console","toggleMute","handleSearch","e","preventDefault","addTrackToEventPlaylist","trackId","eventPlaylistRef","playlistSnapshot","exists","log","id","like","window","location","reload","addToUserTracks","userTracksRef","userTracksSnapshot","userTracksData","Object","keys","fetchPlaylist","playlistRef","playlistData","entries","map","track","filteredTracks","filter","includes","length","fetchTrackInfo","firstTrackId","trackInfo","audioElement","document","getElementById","handleCanPlayThrough","play","catch","addEventListener","removeEventListener","volume","nextTrack","currentTrackId","prevIndex","prevTrack","handleClosePopup","children","fileName","_jsxFileName","lineNumber","columnNumber","style","position","top","right","zIndex","onClick","left","transform","album","images","src","url","alt","maxWidth","fontWeight","margin","artists","name","preview_url","controls","muted","width","backgroundColor","borderRadius","boxShadow","className","color","border","onSubmit","type","value","onChange","target","placeholder","index","artist","join","bottom","_c","$RefreshReg$"],"sources":["/Users/tomtom/Desktop/spotinight/src/Pages/Swipe.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { database } from \"../firebase-config\";\nimport { ref, get, set, update } from \"firebase/database\";\nimport { getTrackInfo } from \"../Spotify\";\nimport { searchTracks, currentToken } from \"../Spotify\";\nimport { useNavigate } from \"react-router-dom\";\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport AddCircleIcon from \"@mui/icons-material/AddCircle\";\nimport PlaylistAddCheckIcon from \"@mui/icons-material/PlaylistAddCheck\";\nimport VolumeUpIcon from \"@mui/icons-material/VolumeUp\";\nimport VolumeOffIcon from \"@mui/icons-material/VolumeOff\";\nimport \"../css/Swipe.css\";\n\nfunction Swipe({ eventId }) {\n  const navigate = useNavigate();\n  const [playlist, setPlaylist] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [currentTrackInfo, setCurrentTrackInfo] = useState(null);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [showSearchPopup, setShowSearchPopup] = useState(false);\n  const [userTracks, setUserTracks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [isMuted, setIsMuted] = useState(false);\n  const [swipeEnd, setSwipeEnd] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [remainingAdds, setRemainingAdds] = useState(3);\n  const [limiteAjout, setLimiteAjout] = useState(0);\n  const userId = localStorage.getItem(\"userId\");\n\n  useEffect(() => {\n    if (!currentToken.access_token) {\n      navigate(\"/login\");\n    }\n  }, [navigate]);\n\n  useEffect(() => {\n    const fetchUserTracks = async () => {\n      if (userId) {\n        const tracks = await getUserTracks(userId);\n        setUserTracks(tracks);\n      }\n    };\n\n    fetchUserTracks();\n  }, [userId]);\n\n  useEffect(() => {\n    const fetchRemainingAdds = async () => {\n      try {\n        const limiteAjoutRef = ref(database, `events/${eventId}/limiteAjout`);\n        const limiteAjoutSnapshot = await get(limiteAjoutRef);\n        const limiteAjout = limiteAjoutSnapshot.val();\n        setLimiteAjout(limiteAjout); // Mise à jour de l'état local limiteAjout\n        const userSongsRef = ref(\n          database,\n          `events/${eventId}/users/${userId}/songsAdded`\n        );\n        const userSongsSnapshot = await get(userSongsRef);\n        const userSongsCount = userSongsSnapshot.val()\n          ? userSongsSnapshot.val()\n          : 0;\n        const remainingAdds = limiteAjout - userSongsCount;\n        setRemainingAdds(remainingAdds);\n      } catch (error) {\n        console.error(\n          \"Erreur lors de la récupération du nombre d'ajouts restants :\",\n          error\n        );\n      }\n    };\n\n    fetchRemainingAdds();\n  }, [eventId, userId]);\n\n  const toggleMute = () => {\n    setIsMuted(!isMuted);\n  };\n\n  const handleSearch = async (e) => {\n    e.preventDefault();\n    if (!searchTerm) return;\n\n    try {\n      const tracks = await searchTracks(searchTerm, currentToken.access_token);\n      setSearchResults(tracks);\n    } catch (error) {\n      console.error(\"Erreur lors de la recherche de pistes :\", error);\n    }\n  };\n\n  const addTrackToEventPlaylist = async (trackId) => {\n    try {\n      const eventPlaylistRef = ref(\n        database,\n        `playlists/${eventId}/tracks/${trackId}`\n      );\n      const playlistSnapshot = await get(eventPlaylistRef);\n\n      if (playlistSnapshot.exists()) {\n        console.log(\"La piste est déjà dans la playlist de l'événement.\");\n        setErrorMessage(\"La piste est déjà dans la playlist de l'événement.\");\n        return;\n      }\n\n      const userSongsRef = ref(\n        database,\n        `events/${eventId}/users/${userId}/songsAdded`\n      );\n      const userSongsSnapshot = await get(userSongsRef);\n\n      const limiteAjoutRef = ref(database, `events/${eventId}/limiteAjout`);\n      const limiteAjoutSnapshot = await get(limiteAjoutRef);\n\n      const userSongsCount = userSongsSnapshot.val()\n        ? userSongsSnapshot.val() + 1\n        : 1;\n      const limiteAjout = limiteAjoutSnapshot.val();\n\n      if (userSongsCount > limiteAjout) {\n        console.log(\n          \"Limite d'ajout de chansons atteinte pour cet utilisateur.\"\n        );\n        setErrorMessage(\n          \"Limite d'ajout de chansons atteinte pour cet utilisateur.\"\n        );\n        return;\n      }\n\n      await set(eventPlaylistRef, { id: trackId, like: 0 });\n      await set(userSongsRef, userSongsCount);\n\n      console.log(\"Piste ajoutée à la playlist de l'événement.\");\n      setErrorMessage(\"\");\n      window.location.reload();\n    } catch (error) {\n      console.error(\n        \"Erreur lors de l'ajout de la piste à la playlist de l'événement :\",\n        error\n      );\n    }\n  };\n\n  const addToUserTracks = async (userId, trackId) => {\n    const userTracksRef = ref(\n      database,\n      `users/${userId}/tracksMeet/${trackId}`\n    );\n    await set(userTracksRef, trackId);\n  };\n\n  const getUserTracks = async (userId) => {\n    try {\n      const userTracksRef = ref(database, `users/${userId}/tracksMeet`);\n      const userTracksSnapshot = await get(userTracksRef);\n      if (userTracksSnapshot.exists()) {\n        const userTracksData = userTracksSnapshot.val();\n        const userTracks = Object.keys(userTracksData);\n        return userTracks;\n      } else {\n        console.log(\"Aucune musique rencontrée pour cet utilisateur.\");\n        return [];\n      }\n    } catch (error) {\n      console.error(\n        \"Erreur lors de la récupération des musiques rencontrées :\",\n        error\n      );\n      return [];\n    }\n  };\n\n  useEffect(() => {\n    const fetchPlaylist = async () => {\n      try {\n        const playlistRef = ref(database, `playlists/${eventId}/tracks`);\n        const playlistSnapshot = await get(playlistRef);\n        if (playlistSnapshot.exists()) {\n          const playlistData = playlistSnapshot.val();\n          const tracks = Object.entries(playlistData).map(([id, track]) => ({\n            id,\n            ...track,\n          }));\n          const filteredTracks = tracks.filter((track) => {\n            return !userTracks.includes(track.id);\n          });\n          setPlaylist(filteredTracks);\n          if (playlist.length > 0) {\n            setSwipeEnd(false);\n          }\n          // setLoading(false); // Mettre fin au chargement une fois que les musiques sont chargées\n        } else {\n          console.log(\"Playlist non trouvée\");\n          // setLoading(false); // Mettre fin au chargement si aucune playlist n'est trouvée\n        }\n      } catch (error) {\n        console.error(\"Erreur :\", error);\n        // setLoading(false); // Mettre fin au chargement en cas d'erreur\n      }\n    };\n\n    fetchPlaylist();\n  }, [eventId, userTracks]);\n\n  useEffect(() => {\n    const fetchTrackInfo = async () => {\n      if (playlist.length > 0) {\n        const trackId = playlist[currentIndex].id;\n        try {\n          // Vérifier si l'ID du morceau est différent du premier ID de la playlist de référence\n          // ou si le premier ID de la playlist de référence ne se trouve pas dans les userTracks\n          const firstTrackId = playlist[0].id;\n          if (trackId !== firstTrackId || !userTracks.includes(firstTrackId)) {\n            const trackInfo = await getTrackInfo(trackId);\n            setCurrentTrackInfo(trackInfo);\n            setLoading(false);\n          } else {\n            // Ne pas mettre à jour le morceau actuel car il ne remplit pas les critères\n            console.log(\n              \"L'ID du morceau est le même que celui du premier morceau de la playlist ou est présent dans les userTracks.\"\n            );\n          }\n        } catch (error) {\n          console.error(\n            \"Erreur lors de la récupération des informations sur la piste :\",\n            error\n          );\n        }\n      } else if (playlist.length === 0) {\n        setSwipeEnd(true);\n        setLoading(false);\n      }\n    };\n\n    fetchTrackInfo();\n  }, [playlist, currentIndex, userTracks]);\n\n  useEffect(() => {\n    const audioElement = document.getElementById(\"audioPreview\");\n\n    const handleCanPlayThrough = () => {\n      if (audioElement) {\n        audioElement.play().catch((error) => {\n          console.error(\n            \"Impossible de démarrer la lecture automatique :\",\n            error\n          );\n        });\n      }\n    };\n\n    if (audioElement) {\n      audioElement.addEventListener(\"canplaythrough\", handleCanPlayThrough);\n    }\n\n    return () => {\n      if (audioElement) {\n        audioElement.removeEventListener(\n          \"canplaythrough\",\n          handleCanPlayThrough\n        );\n      }\n    };\n  }, [currentTrackInfo]);\n\n  useEffect(() => {\n    const audioElement = document.getElementById(\"audioPreview\");\n    if (audioElement) {\n      audioElement.volume = isMuted ? 0 : 1;\n    }\n  }, [isMuted]);\n\n  const nextTrack = async () => {\n    if (currentIndex < playlist.length - 1) {\n      const currentTrackId = playlist[currentIndex].id;\n      const eventPlaylistRef = ref(\n        database,\n        `playlists/${eventId}/tracks/${currentTrackId}`\n      );\n      await update(eventPlaylistRef, { like: playlist[currentIndex].like + 1 });\n      await addToUserTracks(userId, currentTrackId);\n      setCurrentIndex((prevIndex) => prevIndex + 1);\n    } else if (currentIndex == playlist.length - 1) {\n      const currentTrackId = playlist[currentIndex].id;\n      const eventPlaylistRef = ref(\n        database,\n        `playlists/${eventId}/tracks/${currentTrackId}`\n      );\n      await update(eventPlaylistRef, { like: playlist[currentIndex].like + 1 });\n      await addToUserTracks(userId, currentTrackId);\n      setSwipeEnd(true);\n    }\n  };\n\n  const prevTrack = async () => {\n    if (currentIndex >= 0 && currentIndex < playlist.length - 1) {\n      setCurrentIndex((prevIndex) => prevIndex + 1);\n      const currentTrackId = playlist[currentIndex].id;\n      await addToUserTracks(userId, currentTrackId);\n    } else if (currentIndex == playlist.length - 1) {\n      const currentTrackId = playlist[currentIndex].id;\n      await addToUserTracks(userId, currentTrackId);\n      setSwipeEnd(true);\n    }\n  };\n\n  const handleClosePopup = () => {\n    setShowSearchPopup(false);\n    setSearchTerm(\"\");\n    setSearchResults([]);\n  };\n\n  return (\n    <div>\n      {loading ? ( // Afficher le chargement si les musiques sont en cours de chargement\n        <div>Chargement...</div>\n      ) : currentTrackInfo && !swipeEnd ? (\n        <div>\n          {!showSearchPopup && (\n            <div\n              style={{\n                position: \"fixed\",\n                top: \"10px\",\n                right: \"10px\",\n\n                zIndex: \"999999\",\n              }}>\n              {isMuted ? (\n                <VolumeOffIcon onClick={toggleMute} />\n              ) : (\n                <VolumeUpIcon onClick={toggleMute} />\n              )}\n            </div>\n          )}\n          <div\n            style={{\n              position: \"fixed\",\n              top: \"50%\",\n              left: \"50%\",\n              transform: \"translate(-50%, -50%)\",\n            }}>\n            {/* Affichage de l'icône de volume en fonction de l'état mute */}\n\n            {currentTrackInfo.album.images.length > 0 && (\n              <img\n                src={currentTrackInfo.album.images[0].url}\n                alt=\"Image de la piste\"\n                style={{ maxWidth: \"300px\" }}\n              />\n            )}\n            <p style={{ fontWeight: \"bold\", margin: \"10px\" }}>\n              {currentTrackInfo.artists[0].name}\n            </p>\n            <p style={{ margin: \"0\" }}>{currentTrackInfo.name}</p>\n            <div\n              style={{\n                position: \"fixed\",\n                top: \"50%\",\n                left: \"50%\",\n                transform: \"translate(-50%, -50%)\",\n              }}>\n              {/* Intégration de la preview audio */}\n              {currentTrackInfo.preview_url && !isMuted && (\n                <audio\n                  controls\n                  id=\"audioPreview\"\n                  src={currentTrackInfo.preview_url}\n                  muted={isMuted ? \"muted\" : \"\"}\n                  style={{\n                    width: \"200px\",\n                    backgroundColor: \"transparent\",\n                    borderRadius: \"10px\",\n                    boxShadow: \"0px 0px 10px rgba(0, 0, 0, 0.1)\", // Ajoute une ombre subtile\n                  }}\n                />\n              )}\n              {!currentTrackInfo.preview_url && !isMuted && (\n                <p>Aucun audio disponible</p>\n              )}\n            </div>\n\n            {/* Fin de l'intégration de la preview audio */}\n            <div className=\"tripleButton\">\n              <button\n                onClick={prevTrack}\n                style={{ color: \"red\", border: \"red solid 2px\" }}>\n                <CloseIcon />\n              </button>\n              <button onClick={() => setShowSearchPopup(true)}>\n                <PlaylistAddCheckIcon />\n              </button>\n              <button\n                onClick={nextTrack}\n                style={{ color: \"#1db954\", border: \"#1db954 solid 2px\" }}>\n                <FavoriteIcon />\n              </button>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div>\n          Aucun son disponible\n          <div className=\"tripleButton\">\n            <button onClick={() => setShowSearchPopup(true)}>\n              <PlaylistAddCheckIcon />\n            </button>\n          </div>\n        </div> // Afficher un message si aucun son n'est disponible\n      )}\n      {showSearchPopup && (\n        <div className=\"search-popup\">\n          <h3>\n            Ajout(s) restant(s) : {remainingAdds}/{limiteAjout}\n          </h3>\n          {remainingAdds > 0 && (\n            <form onSubmit={handleSearch}>\n              <input\n                type=\"text\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                placeholder=\"Recherche une chanson\"\n              />\n              <button type=\"submit\">Rechercher</button>\n            </form>\n          )}\n          <div>\n            {searchResults.length > 0 && (\n              <div>\n                {errorMessage && <div>{errorMessage}</div>}\n                <div className=\"search-results-container\">\n                  {searchResults.map((track, index) => (\n                    <div key={track.id} className=\"search-result\">\n                      <img\n                        src={track.album.images[0].url}\n                        alt=\"Couverture de l'album\"\n                        className=\"search-result-image\"\n                      />\n                      <div className=\"search-result-details\">\n                        <p style={{ fontWeight: \"bold\" }}>{track.name}</p>\n                        <p>\n                          {track.artists\n                            .map((artist) => artist.name)\n                            .join(\", \")}\n                        </p>\n                      </div>\n                      <div className=\"buttonAdd\">\n                        {\" \"}\n                        {/* Utilise className au lieu de class */}\n                        <button\n                          onClick={() => addTrackToEventPlaylist(track.id)}>\n                          <AddCircleIcon />\n                        </button>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n\n          {remainingAdds <= 0 && (\n            <div style={{ position: \"fixed\", top: \"50%\" }}>\n              Vous ne pouvez plus ajouter de son.\n            </div>\n          )}\n          <button\n            onClick={handleClosePopup}\n            style={{\n              position: \"fixed\",\n              bottom: \"0\",\n              margin: \"0\",\n              borderRadius: \"0\",\n            }}>\n            Fermer\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\nexport default Swipe;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,MAAM,QAAQ,mBAAmB;AACzD,SAASC,YAAY,QAAQ,YAAY;AACzC,SAASC,YAAY,EAAEC,YAAY,QAAQ,YAAY;AACvD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,YAAY,MAAM,8BAA8B;AACvD,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,aAAa,MAAM,+BAA+B;AACzD,OAAOC,oBAAoB,MAAM,sCAAsC;AACvE,OAAOC,YAAY,MAAM,8BAA8B;AACvD,OAAOC,aAAa,MAAM,+BAA+B;AACzD,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,KAAKA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EAC1B,MAAMC,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACyB,YAAY,EAAEC,eAAe,CAAC,GAAG1B,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAAC2B,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG5B,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAAC6B,UAAU,EAAEC,aAAa,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAAC+B,aAAa,EAAEC,gBAAgB,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACiC,eAAe,EAAEC,kBAAkB,CAAC,GAAGlC,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACmC,UAAU,EAAEC,aAAa,CAAC,GAAGpC,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACqC,OAAO,EAAEC,UAAU,CAAC,GAAGtC,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACuC,OAAO,EAAEC,UAAU,CAAC,GAAGxC,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACyC,QAAQ,EAAEC,WAAW,CAAC,GAAG1C,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAAC2C,YAAY,EAAEC,eAAe,CAAC,GAAG5C,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAAC6C,aAAa,EAAEC,gBAAgB,CAAC,GAAG9C,QAAQ,CAAC,CAAC,CAAC;EACrD,MAAM,CAAC+C,WAAW,EAAEC,cAAc,CAAC,GAAGhD,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAMiD,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;EAE7ClD,SAAS,CAAC,MAAM;IACd,IAAI,CAACQ,YAAY,CAAC2C,YAAY,EAAE;MAC9B9B,QAAQ,CAAC,QAAQ,CAAC;IACpB;EACF,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEdrB,SAAS,CAAC,MAAM;IACd,MAAMoD,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAIJ,MAAM,EAAE;QACV,MAAMK,MAAM,GAAG,MAAMC,aAAa,CAACN,MAAM,CAAC;QAC1Cb,aAAa,CAACkB,MAAM,CAAC;MACvB;IACF,CAAC;IAEDD,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,CAACJ,MAAM,CAAC,CAAC;EAEZhD,SAAS,CAAC,MAAM;IACd,MAAMuD,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAI;QACF,MAAMC,cAAc,GAAGtD,GAAG,CAACD,QAAQ,EAAG,UAASkB,OAAQ,cAAa,CAAC;QACrE,MAAMsC,mBAAmB,GAAG,MAAMtD,GAAG,CAACqD,cAAc,CAAC;QACrD,MAAMV,WAAW,GAAGW,mBAAmB,CAACC,GAAG,CAAC,CAAC;QAC7CX,cAAc,CAACD,WAAW,CAAC,CAAC,CAAC;QAC7B,MAAMa,YAAY,GAAGzD,GAAG,CACtBD,QAAQ,EACP,UAASkB,OAAQ,UAAS6B,MAAO,aACpC,CAAC;QACD,MAAMY,iBAAiB,GAAG,MAAMzD,GAAG,CAACwD,YAAY,CAAC;QACjD,MAAME,cAAc,GAAGD,iBAAiB,CAACF,GAAG,CAAC,CAAC,GAC1CE,iBAAiB,CAACF,GAAG,CAAC,CAAC,GACvB,CAAC;QACL,MAAMd,aAAa,GAAGE,WAAW,GAAGe,cAAc;QAClDhB,gBAAgB,CAACD,aAAa,CAAC;MACjC,CAAC,CAAC,OAAOkB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CACX,8DAA8D,EAC9DA,KACF,CAAC;MACH;IACF,CAAC;IAEDP,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,CAACpC,OAAO,EAAE6B,MAAM,CAAC,CAAC;EAErB,MAAMgB,UAAU,GAAGA,CAAA,KAAM;IACvBzB,UAAU,CAAC,CAACD,OAAO,CAAC;EACtB,CAAC;EAED,MAAM2B,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACvC,UAAU,EAAE;IAEjB,IAAI;MACF,MAAMyB,MAAM,GAAG,MAAM9C,YAAY,CAACqB,UAAU,EAAEpB,YAAY,CAAC2C,YAAY,CAAC;MACxEpB,gBAAgB,CAACsB,MAAM,CAAC;IAC1B,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;IACjE;EACF,CAAC;EAED,MAAMM,uBAAuB,GAAG,MAAOC,OAAO,IAAK;IACjD,IAAI;MACF,MAAMC,gBAAgB,GAAGpE,GAAG,CAC1BD,QAAQ,EACP,aAAYkB,OAAQ,WAAUkD,OAAQ,EACzC,CAAC;MACD,MAAME,gBAAgB,GAAG,MAAMpE,GAAG,CAACmE,gBAAgB,CAAC;MAEpD,IAAIC,gBAAgB,CAACC,MAAM,CAAC,CAAC,EAAE;QAC7BT,OAAO,CAACU,GAAG,CAAC,oDAAoD,CAAC;QACjE9B,eAAe,CAAC,oDAAoD,CAAC;QACrE;MACF;MAEA,MAAMgB,YAAY,GAAGzD,GAAG,CACtBD,QAAQ,EACP,UAASkB,OAAQ,UAAS6B,MAAO,aACpC,CAAC;MACD,MAAMY,iBAAiB,GAAG,MAAMzD,GAAG,CAACwD,YAAY,CAAC;MAEjD,MAAMH,cAAc,GAAGtD,GAAG,CAACD,QAAQ,EAAG,UAASkB,OAAQ,cAAa,CAAC;MACrE,MAAMsC,mBAAmB,GAAG,MAAMtD,GAAG,CAACqD,cAAc,CAAC;MAErD,MAAMK,cAAc,GAAGD,iBAAiB,CAACF,GAAG,CAAC,CAAC,GAC1CE,iBAAiB,CAACF,GAAG,CAAC,CAAC,GAAG,CAAC,GAC3B,CAAC;MACL,MAAMZ,WAAW,GAAGW,mBAAmB,CAACC,GAAG,CAAC,CAAC;MAE7C,IAAIG,cAAc,GAAGf,WAAW,EAAE;QAChCiB,OAAO,CAACU,GAAG,CACT,2DACF,CAAC;QACD9B,eAAe,CACb,2DACF,CAAC;QACD;MACF;MAEA,MAAMvC,GAAG,CAACkE,gBAAgB,EAAE;QAAEI,EAAE,EAAEL,OAAO;QAAEM,IAAI,EAAE;MAAE,CAAC,CAAC;MACrD,MAAMvE,GAAG,CAACuD,YAAY,EAAEE,cAAc,CAAC;MAEvCE,OAAO,CAACU,GAAG,CAAC,6CAA6C,CAAC;MAC1D9B,eAAe,CAAC,EAAE,CAAC;MACnBiC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;IAC1B,CAAC,CAAC,OAAOhB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CACX,mEAAmE,EACnEA,KACF,CAAC;IACH;EACF,CAAC;EAED,MAAMiB,eAAe,GAAG,MAAAA,CAAO/B,MAAM,EAAEqB,OAAO,KAAK;IACjD,MAAMW,aAAa,GAAG9E,GAAG,CACvBD,QAAQ,EACP,SAAQ+C,MAAO,eAAcqB,OAAQ,EACxC,CAAC;IACD,MAAMjE,GAAG,CAAC4E,aAAa,EAAEX,OAAO,CAAC;EACnC,CAAC;EAED,MAAMf,aAAa,GAAG,MAAON,MAAM,IAAK;IACtC,IAAI;MACF,MAAMgC,aAAa,GAAG9E,GAAG,CAACD,QAAQ,EAAG,SAAQ+C,MAAO,aAAY,CAAC;MACjE,MAAMiC,kBAAkB,GAAG,MAAM9E,GAAG,CAAC6E,aAAa,CAAC;MACnD,IAAIC,kBAAkB,CAACT,MAAM,CAAC,CAAC,EAAE;QAC/B,MAAMU,cAAc,GAAGD,kBAAkB,CAACvB,GAAG,CAAC,CAAC;QAC/C,MAAMxB,UAAU,GAAGiD,MAAM,CAACC,IAAI,CAACF,cAAc,CAAC;QAC9C,OAAOhD,UAAU;MACnB,CAAC,MAAM;QACL6B,OAAO,CAACU,GAAG,CAAC,iDAAiD,CAAC;QAC9D,OAAO,EAAE;MACX;IACF,CAAC,CAAC,OAAOX,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CACX,2DAA2D,EAC3DA,KACF,CAAC;MACD,OAAO,EAAE;IACX;EACF,CAAC;EAED9D,SAAS,CAAC,MAAM;IACd,MAAMqF,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,WAAW,GAAGpF,GAAG,CAACD,QAAQ,EAAG,aAAYkB,OAAQ,SAAQ,CAAC;QAChE,MAAMoD,gBAAgB,GAAG,MAAMpE,GAAG,CAACmF,WAAW,CAAC;QAC/C,IAAIf,gBAAgB,CAACC,MAAM,CAAC,CAAC,EAAE;UAC7B,MAAMe,YAAY,GAAGhB,gBAAgB,CAACb,GAAG,CAAC,CAAC;UAC3C,MAAML,MAAM,GAAG8B,MAAM,CAACK,OAAO,CAACD,YAAY,CAAC,CAACE,GAAG,CAAC,CAAC,CAACf,EAAE,EAAEgB,KAAK,CAAC,MAAM;YAChEhB,EAAE;YACF,GAAGgB;UACL,CAAC,CAAC,CAAC;UACH,MAAMC,cAAc,GAAGtC,MAAM,CAACuC,MAAM,CAAEF,KAAK,IAAK;YAC9C,OAAO,CAACxD,UAAU,CAAC2D,QAAQ,CAACH,KAAK,CAAChB,EAAE,CAAC;UACvC,CAAC,CAAC;UACFnD,WAAW,CAACoE,cAAc,CAAC;UAC3B,IAAIrE,QAAQ,CAACwE,MAAM,GAAG,CAAC,EAAE;YACvBrD,WAAW,CAAC,KAAK,CAAC;UACpB;UACA;QACF,CAAC,MAAM;UACLsB,OAAO,CAACU,GAAG,CAAC,sBAAsB,CAAC;UACnC;QACF;MACF,CAAC,CAAC,OAAOX,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;QAChC;MACF;IACF,CAAC;IAEDuB,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAAClE,OAAO,EAAEe,UAAU,CAAC,CAAC;EAEzBlC,SAAS,CAAC,MAAM;IACd,MAAM+F,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAIzE,QAAQ,CAACwE,MAAM,GAAG,CAAC,EAAE;QACvB,MAAMzB,OAAO,GAAG/C,QAAQ,CAACE,YAAY,CAAC,CAACkD,EAAE;QACzC,IAAI;UACF;UACA;UACA,MAAMsB,YAAY,GAAG1E,QAAQ,CAAC,CAAC,CAAC,CAACoD,EAAE;UACnC,IAAIL,OAAO,KAAK2B,YAAY,IAAI,CAAC9D,UAAU,CAAC2D,QAAQ,CAACG,YAAY,CAAC,EAAE;YAClE,MAAMC,SAAS,GAAG,MAAM3F,YAAY,CAAC+D,OAAO,CAAC;YAC7C1C,mBAAmB,CAACsE,SAAS,CAAC;YAC9B5D,UAAU,CAAC,KAAK,CAAC;UACnB,CAAC,MAAM;YACL;YACA0B,OAAO,CAACU,GAAG,CACT,6GACF,CAAC;UACH;QACF,CAAC,CAAC,OAAOX,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CACX,gEAAgE,EAChEA,KACF,CAAC;QACH;MACF,CAAC,MAAM,IAAIxC,QAAQ,CAACwE,MAAM,KAAK,CAAC,EAAE;QAChCrD,WAAW,CAAC,IAAI,CAAC;QACjBJ,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAED0D,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACzE,QAAQ,EAAEE,YAAY,EAAEU,UAAU,CAAC,CAAC;EAExClC,SAAS,CAAC,MAAM;IACd,MAAMkG,YAAY,GAAGC,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC;IAE5D,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;MACjC,IAAIH,YAAY,EAAE;QAChBA,YAAY,CAACI,IAAI,CAAC,CAAC,CAACC,KAAK,CAAEzC,KAAK,IAAK;UACnCC,OAAO,CAACD,KAAK,CACX,iDAAiD,EACjDA,KACF,CAAC;QACH,CAAC,CAAC;MACJ;IACF,CAAC;IAED,IAAIoC,YAAY,EAAE;MAChBA,YAAY,CAACM,gBAAgB,CAAC,gBAAgB,EAAEH,oBAAoB,CAAC;IACvE;IAEA,OAAO,MAAM;MACX,IAAIH,YAAY,EAAE;QAChBA,YAAY,CAACO,mBAAmB,CAC9B,gBAAgB,EAChBJ,oBACF,CAAC;MACH;IACF,CAAC;EACH,CAAC,EAAE,CAAC3E,gBAAgB,CAAC,CAAC;EAEtB1B,SAAS,CAAC,MAAM;IACd,MAAMkG,YAAY,GAAGC,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC;IAC5D,IAAIF,YAAY,EAAE;MAChBA,YAAY,CAACQ,MAAM,GAAGpE,OAAO,GAAG,CAAC,GAAG,CAAC;IACvC;EACF,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EAEb,MAAMqE,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAInF,YAAY,GAAGF,QAAQ,CAACwE,MAAM,GAAG,CAAC,EAAE;MACtC,MAAMc,cAAc,GAAGtF,QAAQ,CAACE,YAAY,CAAC,CAACkD,EAAE;MAChD,MAAMJ,gBAAgB,GAAGpE,GAAG,CAC1BD,QAAQ,EACP,aAAYkB,OAAQ,WAAUyF,cAAe,EAChD,CAAC;MACD,MAAMvG,MAAM,CAACiE,gBAAgB,EAAE;QAAEK,IAAI,EAAErD,QAAQ,CAACE,YAAY,CAAC,CAACmD,IAAI,GAAG;MAAE,CAAC,CAAC;MACzE,MAAMI,eAAe,CAAC/B,MAAM,EAAE4D,cAAc,CAAC;MAC7CnF,eAAe,CAAEoF,SAAS,IAAKA,SAAS,GAAG,CAAC,CAAC;IAC/C,CAAC,MAAM,IAAIrF,YAAY,IAAIF,QAAQ,CAACwE,MAAM,GAAG,CAAC,EAAE;MAC9C,MAAMc,cAAc,GAAGtF,QAAQ,CAACE,YAAY,CAAC,CAACkD,EAAE;MAChD,MAAMJ,gBAAgB,GAAGpE,GAAG,CAC1BD,QAAQ,EACP,aAAYkB,OAAQ,WAAUyF,cAAe,EAChD,CAAC;MACD,MAAMvG,MAAM,CAACiE,gBAAgB,EAAE;QAAEK,IAAI,EAAErD,QAAQ,CAACE,YAAY,CAAC,CAACmD,IAAI,GAAG;MAAE,CAAC,CAAC;MACzE,MAAMI,eAAe,CAAC/B,MAAM,EAAE4D,cAAc,CAAC;MAC7CnE,WAAW,CAAC,IAAI,CAAC;IACnB;EACF,CAAC;EAED,MAAMqE,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAItF,YAAY,IAAI,CAAC,IAAIA,YAAY,GAAGF,QAAQ,CAACwE,MAAM,GAAG,CAAC,EAAE;MAC3DrE,eAAe,CAAEoF,SAAS,IAAKA,SAAS,GAAG,CAAC,CAAC;MAC7C,MAAMD,cAAc,GAAGtF,QAAQ,CAACE,YAAY,CAAC,CAACkD,EAAE;MAChD,MAAMK,eAAe,CAAC/B,MAAM,EAAE4D,cAAc,CAAC;IAC/C,CAAC,MAAM,IAAIpF,YAAY,IAAIF,QAAQ,CAACwE,MAAM,GAAG,CAAC,EAAE;MAC9C,MAAMc,cAAc,GAAGtF,QAAQ,CAACE,YAAY,CAAC,CAACkD,EAAE;MAChD,MAAMK,eAAe,CAAC/B,MAAM,EAAE4D,cAAc,CAAC;MAC7CnE,WAAW,CAAC,IAAI,CAAC;IACnB;EACF,CAAC;EAED,MAAMsE,gBAAgB,GAAGA,CAAA,KAAM;IAC7B9E,kBAAkB,CAAC,KAAK,CAAC;IACzBJ,aAAa,CAAC,EAAE,CAAC;IACjBE,gBAAgB,CAAC,EAAE,CAAC;EACtB,CAAC;EAED,oBACEd,OAAA;IAAA+F,QAAA,GACG5E,OAAO;IAAA;IAAK;IACXnB,OAAA;MAAA+F,QAAA,EAAK;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,GACtB1F,gBAAgB,IAAI,CAACc,QAAQ,gBAC/BvB,OAAA;MAAA+F,QAAA,GACG,CAAChF,eAAe,iBACff,OAAA;QACEoG,KAAK,EAAE;UACLC,QAAQ,EAAE,OAAO;UACjBC,GAAG,EAAE,MAAM;UACXC,KAAK,EAAE,MAAM;UAEbC,MAAM,EAAE;QACV,CAAE;QAAAT,QAAA,EACD1E,OAAO,gBACNrB,OAAA,CAACF,aAAa;UAAC2G,OAAO,EAAE1D;QAAW;UAAAiD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAEtCnG,OAAA,CAACH,YAAY;UAAC4G,OAAO,EAAE1D;QAAW;UAAAiD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MACrC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CACN,eACDnG,OAAA;QACEoG,KAAK,EAAE;UACLC,QAAQ,EAAE,OAAO;UACjBC,GAAG,EAAE,KAAK;UACVI,IAAI,EAAE,KAAK;UACXC,SAAS,EAAE;QACb,CAAE;QAAAZ,QAAA,GAGDtF,gBAAgB,CAACmG,KAAK,CAACC,MAAM,CAAChC,MAAM,GAAG,CAAC,iBACvC7E,OAAA;UACE8G,GAAG,EAAErG,gBAAgB,CAACmG,KAAK,CAACC,MAAM,CAAC,CAAC,CAAC,CAACE,GAAI;UAC1CC,GAAG,EAAC,mBAAmB;UACvBZ,KAAK,EAAE;YAAEa,QAAQ,EAAE;UAAQ;QAAE;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B,CACF,eACDnG,OAAA;UAAGoG,KAAK,EAAE;YAAEc,UAAU,EAAE,MAAM;YAAEC,MAAM,EAAE;UAAO,CAAE;UAAApB,QAAA,EAC9CtF,gBAAgB,CAAC2G,OAAO,CAAC,CAAC,CAAC,CAACC;QAAI;UAAArB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC,CAAC,eACJnG,OAAA;UAAGoG,KAAK,EAAE;YAAEe,MAAM,EAAE;UAAI,CAAE;UAAApB,QAAA,EAAEtF,gBAAgB,CAAC4G;QAAI;UAAArB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtDnG,OAAA;UACEoG,KAAK,EAAE;YACLC,QAAQ,EAAE,OAAO;YACjBC,GAAG,EAAE,KAAK;YACVI,IAAI,EAAE,KAAK;YACXC,SAAS,EAAE;UACb,CAAE;UAAAZ,QAAA,GAEDtF,gBAAgB,CAAC6G,WAAW,IAAI,CAACjG,OAAO,iBACvCrB,OAAA;YACEuH,QAAQ;YACR9D,EAAE,EAAC,cAAc;YACjBqD,GAAG,EAAErG,gBAAgB,CAAC6G,WAAY;YAClCE,KAAK,EAAEnG,OAAO,GAAG,OAAO,GAAG,EAAG;YAC9B+E,KAAK,EAAE;cACLqB,KAAK,EAAE,OAAO;cACdC,eAAe,EAAE,aAAa;cAC9BC,YAAY,EAAE,MAAM;cACpBC,SAAS,EAAE,iCAAiC,CAAE;YAChD;UAAE;YAAA5B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CACF,EACA,CAAC1F,gBAAgB,CAAC6G,WAAW,IAAI,CAACjG,OAAO,iBACxCrB,OAAA;YAAA+F,QAAA,EAAG;UAAsB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAC7B;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eAGNnG,OAAA;UAAK6H,SAAS,EAAC,cAAc;UAAA9B,QAAA,gBAC3B/F,OAAA;YACEyG,OAAO,EAAEZ,SAAU;YACnBO,KAAK,EAAE;cAAE0B,KAAK,EAAE,KAAK;cAAEC,MAAM,EAAE;YAAgB,CAAE;YAAAhC,QAAA,eACjD/F,OAAA,CAACN,SAAS;cAAAsG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACP,CAAC,eACTnG,OAAA;YAAQyG,OAAO,EAAEA,CAAA,KAAMzF,kBAAkB,CAAC,IAAI,CAAE;YAAA+E,QAAA,eAC9C/F,OAAA,CAACJ,oBAAoB;cAAAoG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClB,CAAC,eACTnG,OAAA;YACEyG,OAAO,EAAEf,SAAU;YACnBU,KAAK,EAAE;cAAE0B,KAAK,EAAE,SAAS;cAAEC,MAAM,EAAE;YAAoB,CAAE;YAAAhC,QAAA,eACzD/F,OAAA,CAACP,YAAY;cAAAuG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,gBAENnG,OAAA;MAAA+F,QAAA,GAAK,sBAEH,eAAA/F,OAAA;QAAK6H,SAAS,EAAC,cAAc;QAAA9B,QAAA,eAC3B/F,OAAA;UAAQyG,OAAO,EAAEA,CAAA,KAAMzF,kBAAkB,CAAC,IAAI,CAAE;UAAA+E,QAAA,eAC9C/F,OAAA,CAACJ,oBAAoB;YAAAoG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,CAAC;IACR,EACApF,eAAe,iBACdf,OAAA;MAAK6H,SAAS,EAAC,cAAc;MAAA9B,QAAA,gBAC3B/F,OAAA;QAAA+F,QAAA,GAAI,wBACoB,EAACpE,aAAa,EAAC,GAAC,EAACE,WAAW;MAAA;QAAAmE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,EACJxE,aAAa,GAAG,CAAC,iBAChB3B,OAAA;QAAMgI,QAAQ,EAAEhF,YAAa;QAAA+C,QAAA,gBAC3B/F,OAAA;UACEiI,IAAI,EAAC,MAAM;UACXC,KAAK,EAAEvH,UAAW;UAClBwH,QAAQ,EAAGlF,CAAC,IAAKrC,aAAa,CAACqC,CAAC,CAACmF,MAAM,CAACF,KAAK,CAAE;UAC/CG,WAAW,EAAC;QAAuB;UAAArC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC,CAAC,eACFnG,OAAA;UAAQiI,IAAI,EAAC,QAAQ;UAAAlC,QAAA,EAAC;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CACP,eACDnG,OAAA;QAAA+F,QAAA,EACGlF,aAAa,CAACgE,MAAM,GAAG,CAAC,iBACvB7E,OAAA;UAAA+F,QAAA,GACGtE,YAAY,iBAAIzB,OAAA;YAAA+F,QAAA,EAAMtE;UAAY;YAAAuE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC1CnG,OAAA;YAAK6H,SAAS,EAAC,0BAA0B;YAAA9B,QAAA,EACtClF,aAAa,CAAC2D,GAAG,CAAC,CAACC,KAAK,EAAE6D,KAAK,kBAC9BtI,OAAA;cAAoB6H,SAAS,EAAC,eAAe;cAAA9B,QAAA,gBAC3C/F,OAAA;gBACE8G,GAAG,EAAErC,KAAK,CAACmC,KAAK,CAACC,MAAM,CAAC,CAAC,CAAC,CAACE,GAAI;gBAC/BC,GAAG,EAAC,uBAAuB;gBAC3Ba,SAAS,EAAC;cAAqB;gBAAA7B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChC,CAAC,eACFnG,OAAA;gBAAK6H,SAAS,EAAC,uBAAuB;gBAAA9B,QAAA,gBACpC/F,OAAA;kBAAGoG,KAAK,EAAE;oBAAEc,UAAU,EAAE;kBAAO,CAAE;kBAAAnB,QAAA,EAAEtB,KAAK,CAAC4C;gBAAI;kBAAArB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eAClDnG,OAAA;kBAAA+F,QAAA,EACGtB,KAAK,CAAC2C,OAAO,CACX5C,GAAG,CAAE+D,MAAM,IAAKA,MAAM,CAAClB,IAAI,CAAC,CAC5BmB,IAAI,CAAC,IAAI;gBAAC;kBAAAxC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACZ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACD,CAAC,eACNnG,OAAA;gBAAK6H,SAAS,EAAC,WAAW;gBAAA9B,QAAA,GACvB,GAAG,eAEJ/F,OAAA;kBACEyG,OAAO,EAAEA,CAAA,KAAMtD,uBAAuB,CAACsB,KAAK,CAAChB,EAAE,CAAE;kBAAAsC,QAAA,eACjD/F,OAAA,CAACL,aAAa;oBAAAqG,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACX,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACN,CAAC;YAAA,GArBE1B,KAAK,CAAChB,EAAE;cAAAuC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAsBb,CACN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MACN;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,EAELxE,aAAa,IAAI,CAAC,iBACjB3B,OAAA;QAAKoG,KAAK,EAAE;UAAEC,QAAQ,EAAE,OAAO;UAAEC,GAAG,EAAE;QAAM,CAAE;QAAAP,QAAA,EAAC;MAE/C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CACN,eACDnG,OAAA;QACEyG,OAAO,EAAEX,gBAAiB;QAC1BM,KAAK,EAAE;UACLC,QAAQ,EAAE,OAAO;UACjBoC,MAAM,EAAE,GAAG;UACXtB,MAAM,EAAE,GAAG;UACXQ,YAAY,EAAE;QAChB,CAAE;QAAA5B,QAAA,EAAC;MAEL;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAChG,EAAA,CAldQF,KAAK;EAAA,QACKT,WAAW;AAAA;AAAAkJ,EAAA,GADrBzI,KAAK;AAmdd,eAAeA,KAAK;AAAC,IAAAyI,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}