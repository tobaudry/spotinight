{"ast":null,"code":"var _jsxFileName = \"/Users/tomtom/Desktop/spotinight/src/Pages/Accueil.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getUserData, isLogged, loginSpotify, logoutSpotify, getGlobalTopTracks } from \"../Spotify\";\nimport { database } from \"../firebase-config\";\nimport { ref, set } from \"../firebase-config\";\nimport \"../App.css\";\nimport \"../css/Accueil.css\";\nimport { get } from \"firebase/database\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Accueil() {\n  _s();\n  const [user, setUser] = useState(null);\n  const [events, setEvents] = useState([]);\n  const [globalTopTracks, setGlobalTopTracks] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchData = async () => {\n      const loggedIn = isLogged();\n      if (loggedIn) {\n        const userData = await getUserData();\n        if (userData && userData.id && userData.display_name) {\n          // Vérification des données utilisateur valides\n          setUser(userData);\n          AddUser(userData);\n          localStorage.setItem(\"userId\", userData.id);\n          fetchUserEvents(userData.id);\n          fetchGlobalTopTracks();\n          const userId = userData.id;\n          const usersRef = ref(database, `users/${userId}`);\n          try {\n            const userSnapshot = await get(usersRef);\n            if (userSnapshot.exists()) {\n              console.log(\"L'utilisateur est présent dans la base de données.\");\n            } else {\n              console.log(\"L'utilisateur n'est pas présent dans la base de données.\");\n            }\n          } catch (error) {\n            console.error(\"Erreur lors de la vérification de la présence de l'utilisateur dans la base de données :\", error);\n          }\n        } else {\n          // Si les données utilisateur sont invalides, déconnecte l'utilisateur\n          // handleLogout();\n          console.log(\"Données non valides ! \");\n        }\n      }\n    };\n    fetchData();\n  }, []);\n  const AddUser = async userData => {\n    if (userData) {\n      const {\n        id,\n        display_name\n      } = userData; // Extraction des données pertinentes de userData\n      console.log(\"id\", id);\n      console.log(\"display_name\", display_name);\n      const usersRef = ref(database, `users/${id}`); // Référence à l'emplacement de l'utilisateur dans la base de données\n\n      try {\n        const userSnapshot = await get(usersRef);\n        if (!userSnapshot.exists()) {\n          // L'utilisateur n'existe pas encore, nous pouvons l'ajouter\n          await set(usersRef, {\n            username: display_name\n            // Autres données utilisateur si nécessaire\n          });\n          console.log(\"Utilisateur ajouté avec succès à la base de données.\");\n\n          // Enregistrement de l'ID dans le localStorage\n          localStorage.setItem(\"userId\", id);\n          console.log(\"ID de l'utilisateur enregistré dans le localStorage.\", localStorage.getItem(\"userId\"));\n        } else {\n          console.log(\"L'utilisateur existe déjà dans la base de données.\");\n        }\n      } catch (error) {\n        console.error(\"Erreur dans l'ajout dans la base de données : \", error);\n      }\n    }\n  };\n  const fetchUserEvents = async userId => {\n    const eventsRef = ref(database, \"events\");\n    const snapshot = await get(eventsRef);\n    const eventsData = [];\n    snapshot.forEach(childSnapshot => {\n      const eventData = childSnapshot.val();\n      if (eventData.users && eventData.users[userId]) {\n        eventsData.push({\n          id: childSnapshot.key,\n          ...eventData\n        });\n      }\n    });\n    setEvents(eventsData);\n  };\n  const fetchGlobalTopTracks = async () => {\n    try {\n      const tracksData = await getGlobalTopTracks();\n      if (tracksData && tracksData.items) {\n        setGlobalTopTracks(tracksData.items);\n      }\n    } catch (error) {\n      console.error(\"Error fetching global top tracks:\", error);\n    }\n  };\n  const handleLogout = () => {\n    logoutSpotify();\n    setUser(null);\n    navigate(\"/\");\n    localStorage.removeItem(\"userId\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://firebasestorage.googleapis.com/v0/b/spotinight-13b75.appspot.com/o/logo2.png?alt=media&token=4046e15c-1589-471d-8007-c9bf817fac6d\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), user ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Bonjour \", user.display_name, \", content de te revoir !\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Tu n'es pas connect\\xE9.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: user ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/createevent\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Cr\\xE9er un \\xE9v\\xE9nement\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: loginSpotify,\n          children: \"Se connecter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), user ? /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [events.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"events-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Mes \\xE9v\\xE9nements\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            listStyle: \"url('/media/examples/rocket.svg')\"\n          },\n          children: events.map(event => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/event/${event.id}`,\n              children: event.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 21\n            }, this)\n          }, event.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"global-top-tracks\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Vous n'avez aucun \\xE9v\\xE9nement, cr\\xE9ez-en un, ou rejoignez-en un gr\\xE2ce \\xE0 un lien d'invitation !\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"En attendant, voici les titres du moment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tracks-container\",\n          children: globalTopTracks.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"track\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: item.track.album.images[0].url,\n              alt: \"track\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"track-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: item.track.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: item.track.artists.map(artist => artist.name).join(\", \")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 23\n              }, this), item.track.preview_url && /*#__PURE__*/_jsxDEV(\"audio\", {\n                controls: true,\n                src: item.track.preview_url,\n                children: \"Aucun audio disponible\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        className: \"button-logout\",\n        children: \"Se d\\xE9connecter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}\n_s(Accueil, \"iRxdG7UPNDSx4CNiolbajEzH1i8=\", false, function () {\n  return [useNavigate];\n});\n_c = Accueil;\nexport default Accueil;\nvar _c;\n$RefreshReg$(_c, \"Accueil\");","map":{"version":3,"names":["React","useState","useEffect","getUserData","isLogged","loginSpotify","logoutSpotify","getGlobalTopTracks","database","ref","set","get","Link","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Accueil","_s","user","setUser","events","setEvents","globalTopTracks","setGlobalTopTracks","navigate","fetchData","loggedIn","userData","id","display_name","AddUser","localStorage","setItem","fetchUserEvents","fetchGlobalTopTracks","userId","usersRef","userSnapshot","exists","console","log","error","username","getItem","eventsRef","snapshot","eventsData","forEach","childSnapshot","eventData","val","users","push","key","tracksData","items","handleLogout","removeItem","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","to","onClick","length","style","listStyle","map","event","title","item","index","track","album","images","url","name","artists","artist","join","preview_url","controls","_c","$RefreshReg$"],"sources":["/Users/tomtom/Desktop/spotinight/src/Pages/Accueil.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  getUserData,\n  isLogged,\n  loginSpotify,\n  logoutSpotify,\n  getGlobalTopTracks,\n} from \"../Spotify\";\nimport { database } from \"../firebase-config\";\nimport { ref, set } from \"../firebase-config\";\nimport \"../App.css\";\nimport \"../css/Accueil.css\";\nimport { get } from \"firebase/database\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nfunction Accueil() {\n  const [user, setUser] = useState(null);\n  const [events, setEvents] = useState([]);\n  const [globalTopTracks, setGlobalTopTracks] = useState([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const loggedIn = isLogged();\n      if (loggedIn) {\n        const userData = await getUserData();\n        if (userData && userData.id && userData.display_name) {\n          // Vérification des données utilisateur valides\n          setUser(userData);\n          AddUser(userData);\n          localStorage.setItem(\"userId\", userData.id);\n          fetchUserEvents(userData.id);\n          fetchGlobalTopTracks();\n          const userId = userData.id;\n          const usersRef = ref(database, `users/${userId}`);\n          try {\n            const userSnapshot = await get(usersRef);\n            if (userSnapshot.exists()) {\n              console.log(\"L'utilisateur est présent dans la base de données.\");\n            } else {\n              console.log(\n                \"L'utilisateur n'est pas présent dans la base de données.\"\n              );\n            }\n          } catch (error) {\n            console.error(\n              \"Erreur lors de la vérification de la présence de l'utilisateur dans la base de données :\",\n              error\n            );\n          }\n        } else {\n          // Si les données utilisateur sont invalides, déconnecte l'utilisateur\n          // handleLogout();\n          console.log(\"Données non valides ! \");\n        }\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const AddUser = async (userData) => {\n    if (userData) {\n      const { id, display_name } = userData; // Extraction des données pertinentes de userData\n      console.log(\"id\", id);\n      console.log(\"display_name\", display_name);\n\n      const usersRef = ref(database, `users/${id}`); // Référence à l'emplacement de l'utilisateur dans la base de données\n\n      try {\n        const userSnapshot = await get(usersRef);\n\n        if (!userSnapshot.exists()) {\n          // L'utilisateur n'existe pas encore, nous pouvons l'ajouter\n          await set(usersRef, {\n            username: display_name,\n            // Autres données utilisateur si nécessaire\n          });\n          console.log(\"Utilisateur ajouté avec succès à la base de données.\");\n\n          // Enregistrement de l'ID dans le localStorage\n          localStorage.setItem(\"userId\", id);\n          console.log(\n            \"ID de l'utilisateur enregistré dans le localStorage.\",\n            localStorage.getItem(\"userId\")\n          );\n        } else {\n          console.log(\"L'utilisateur existe déjà dans la base de données.\");\n        }\n      } catch (error) {\n        console.error(\"Erreur dans l'ajout dans la base de données : \", error);\n      }\n    }\n  };\n\n  const fetchUserEvents = async (userId) => {\n    const eventsRef = ref(database, \"events\");\n    const snapshot = await get(eventsRef);\n    const eventsData = [];\n\n    snapshot.forEach((childSnapshot) => {\n      const eventData = childSnapshot.val();\n      if (eventData.users && eventData.users[userId]) {\n        eventsData.push({ id: childSnapshot.key, ...eventData });\n      }\n    });\n\n    setEvents(eventsData);\n  };\n\n  const fetchGlobalTopTracks = async () => {\n    try {\n      const tracksData = await getGlobalTopTracks();\n      if (tracksData && tracksData.items) {\n        setGlobalTopTracks(tracksData.items);\n      }\n    } catch (error) {\n      console.error(\"Error fetching global top tracks:\", error);\n    }\n  };\n\n  const handleLogout = () => {\n    logoutSpotify();\n    setUser(null);\n    navigate(\"/\");\n    localStorage.removeItem(\"userId\");\n  };\n\n  return (\n    <div className=\"app\">\n      <header className=\"app-header\">\n        <img\n          src=\"https://firebasestorage.googleapis.com/v0/b/spotinight-13b75.appspot.com/o/logo2.png?alt=media&token=4046e15c-1589-471d-8007-c9bf817fac6d\"\n          alt=\"logo\"\n        />\n        {user ? (\n          <p>Bonjour {user.display_name}, content de te revoir !</p>\n        ) : (\n          <p>Tu n'es pas connecté.</p>\n        )}\n        <div className=\"buttons\">\n          {user ? (\n            <>\n              <Link to=\"/createevent\">\n                <button>Créer un événement</button>\n              </Link>\n            </>\n          ) : (\n            <button onClick={loginSpotify}>Se connecter</button>\n          )}\n        </div>\n      </header>\n      {user ? (\n        <main>\n          {events.length > 0 ? (\n            <div className=\"events-list\">\n              <h2>Mes événements</h2>\n              <ul style={{ listStyle: \"url('/media/examples/rocket.svg')\" }}>\n                {events.map((event) => (\n                  <li key={event.id}>\n                    <Link to={`/event/${event.id}`}>{event.title}</Link>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          ) : (\n            <div className=\"global-top-tracks\">\n              <h2>\n                Vous n'avez aucun événement, créez-en un, ou rejoignez-en un\n                grâce à un lien d'invitation !\n              </h2>\n              <h4>En attendant, voici les titres du moment</h4>\n              <div className=\"tracks-container\">\n                {globalTopTracks.map((item, index) => (\n                  <div key={index} className=\"track\">\n                    <img src={item.track.album.images[0].url} alt=\"track\" />\n                    <div className=\"track-info\">\n                      <h3>{item.track.name}</h3>\n                      <p>\n                        {item.track.artists\n                          .map((artist) => artist.name)\n                          .join(\", \")}\n                      </p>\n                      {item.track.preview_url && (\n                        <audio controls src={item.track.preview_url}>\n                          Aucun audio disponible\n                        </audio>\n                      )}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n          <button onClick={handleLogout} className=\"button-logout\">\n            Se déconnecter\n          </button>\n        </main>\n      ) : (\n        <></>\n      )}\n    </div>\n  );\n}\n\nexport default Accueil;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}